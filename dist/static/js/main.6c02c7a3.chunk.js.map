{"version":3,"sources":["actions/types.js","actions/index.js","components/login/index.js","stores/states_titlecase.js","stores/countries_list.js","components/h1bform/form.js","stores/config.js","components/logout/index.js","components/forgotpassword/index.js","components/signup/index.js","components/employeelist/index.js","components/privateroute/index.js","components/admin/index.js","components/previousforms/previousforms.js","routes/index.js","firebase/index.js","sagas/index.js","firebase/auth.js","reducers/index.js","stores/index.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","LOGOUT","FILE_UPLOAD","GET_EMPLOYEE_LIST","GET_EMPLOYEE_LIST_SUCCESS","SIGN_UP","SUBMIT_IMMI_FORM","SUBMIT_IMMI_FORM_SUCCESS","FORGOT_PASSWORD","ADMIN_UPLOADS","SET_EMPLOYEE_DATA","GET_DATA","login","loginCredentials","type","Types","payload","submitImmiFormAction","formData","fileUpload","fileData","signUp","signUpData","forgotPassword","email","getListOfEmployeesSuccessResponse","data","adminUploads","setEmployeeData","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","objectSpread","state","defineProperty","target","name","value","onSubmit","preventDefault","errors","validate","keys","length","dispatch","Validator","isEmail","password","bind","assertThisInitialized","_this$state","react_default","a","createElement","style","background","padding","height","row","gutter","col","offset","span","src","alt","width","card","title","es_form","Item","error","color","input","id","placeholder","es_button","onClick","Link","float","to","nextProps","loginStatus","history","push","Component","protoTypes","connect","getEmployeesList","STATES_LIST","abbreviation","COUNTRIES_LIST","pdf","jsPDF","xhr","XMLHttpRequest","FileSaver","require","dropboxToken","Header","Layout","Content","Footer","RadioGroup","Radio","Group","Panel","Collapse","Option","Select","TextArea","Input","H1bForm","addTravelHistory","employeeDetails","assign","travelHistory","arrivalDate","moment","valueOf","departureDate","daysSpent","addKidsDetails","_this$setState","kidsDetails","onBirthDateChange","date","passportDetails","onPassportIssueDateChange","onPassportExpirationDateChange","onImmigrationUSVisaIssuedDateChange","immigirationDetails","onImmigrationWhenDateChange","onImmigrationvisaExpireDateDateChange","onImmigrationEntryValidTillDateChange","onImmigrationLastEntryUSDateChange","onPortOfEntryDateChange","onVisaStampingDateChange","onTravelInfoStartDateChange","travelDetails","onTravelInfoEndDateChange","onTravelHistoryArrivalDateChange","idx","map","travel","sidx","onTravelHistoryDepartureDateChange","onI140ReceiptDateChange","I140Detials","onI140ApprovalStartDateChange","onI140DateChange","onKidBirthDateChange","onSpouseBirthDateChange","H4Details","onMarraigeDateChange","onProjectStartDateChange","workDetails","onContactChange","contactDetails","onAddressChange","addressDetails","onStateSelect","onOverseasStateSelect","overseasAddressDetails","onClientStateSelect","onSpouseStateSelect","onOverseasAddressChange","onPassportDetailsChange","onImmigirationDetailsChange","onTravelDetailsChange","onTravelHistoryChange","onH4CheckListDetailsChange","H4CheckListDetails","onDependencyRelationChange","onI140DetailsChange","onSpouseDetailsChange","spouseDetails","onKidsDetailsChange","kid","onH4DetailsChange","onWorkDetailsChange","onSpouseCountryChange","country","onSpouseCountryOfCitizenChange","onSpouseCountryOfMarraigeChange","onKidCountryChange","onKidCountryOfCitizenChange","onAddressCountryChange","onOverseasAddressCountryChange","onPassportCountryOfCitizenChange","onConsuleCountryChange","onClientCountryChange","handleCancel","previewVisible","handlePreview","file","previewImage","url","thumbUrl","handleChange","_ref","fileList","uploadFile","fN","th","errorDetails","Map","console","log","files","filename","firstName","lastName","_this$state$employeeD","upload","onprogress","evt","percentComplete","parseInt","loaded","total","onload","status","fileInfo","JSON","parse","response","path_lower","errorMessage","open","setRequestHeader","stringify","path","mode","autorename","mute","send","downloadFile","fileName","filePathLower","blob","Blob","saveAs","exportToPdf","document","getElementById","html2canvas","then","canvas","screenshot","toDataURL","addImage","save","onSave","address1","city","isNumeric","zipCode","overseasAddress1","overseasCity","overseasState","overseasZipCode","overseasCountry","mobileNumber","passportNumber","dateOfBirth","issueDate","expirationDate","countryOfCitizenship","socialSecurityNumber","currentStatus","USVisaIssued","lastNaUSVisaIssuedme","visaExpireDate","immigrationConsule","consulateCity","consulateCountry","i94Number","lastEntryUS","portOfEntry","H4Passport","H4i94","H4Approval","H4Marraige","H4ChildrenCertificate","clientAddress","clientCity","clientState","clientZipCode","vendorName","vendorEmail","projectStartDate","I140Approval","I140Date","I140ReceiptDate","maritalStatus","spouseH4","dependenceRelationship","spouseFirstName","spouseLastName","spouseBirthDate","spouseCountry","spouseCountryOfCitizen","marraigeDate","countryOfMarraige","spouseImmigrationStatus","spouseSocialSecurityNumber","spouseCurrentAddress1","spouseCurrentAddress2","spouseCity","spouseState","spouseZipcode","spouseComment","i","dependenceRelationship2","kidFullName","kidGender","kidMaritalStatus","kidBirthDate","kidCountry","kidCountryOfCitizen","kidImmigrationStatus","kidSocialSecurityNumber","kidCurrentAddress","kidComment","onH4Select","isH4DependentAvailable","onMarraige","isMarried","onH4requiredForSpouse","isH4ReuiredForSpouse","onH4ForKids","haveKids","progress","passportPageProgress","i94Progress","evidenceProgress","payStubsProgress","clientLetterProgress","vendorLetterProgress","mastersTranscriptsProgress","bachelorDegreeProgress","resumeProgress","ssnCopyProgress","ssnCopyForKidsProgress","ssnCopyForSpouseProgress","universityDocsProgress","I140DocumentsProgress","employmentDocsProgress","vendorDocsProgress","layer1DocumentsProgress","layer2DocumentsProgress","lcaProgress","attorneyDocument1Progress","attorneyDocument2Progress","attorneyDocument3Progress","attorneyDocument4Progress","H4PassportProgress","H4MarraigeProgress","H4i94Progress","H4ChildrenCertificateProgress","additionalDocument1ForSpouseProgress","additionalDocument2ForSpouseProgress","additionalDocument3ForSpouseProgress","additionalDocument4ForSpouseProgress","additionalDocument5ForSpouseProgress","additionalDocument1ForEmployeeProgress","additionalDocument2ForEmployeeProgress","additionalDocument3ForEmployeeProgress","additionalDocument4ForEmployeeProgress","additionalDocument5ForEmployeeProgress","additionalDocument1ForReliableHRProgress","additionalDocument2ForReliableHRProgress","additionalDocument3ForReliableHRProgress","employeeID","typeOfApplication","premiumProcessInfo","middleName","comment","resume","resumePathLower","bachelorDegree","bachelorDegreePathLower","mastersTranscripts","mastersTranscriptsPathLower","payStubs","payStubsPathLower","passportPage","passportPagePathLower","i94","i94PathLower","evidence","evidencePathLower","ssnCopy","ssnCopyPathLower","ssnCopyForKids","ssnCopyForKidsPathLower","ssnCopyForSpouse","ssnCopyForSpousePathLower","universityDocs","universityDocsPathLower","clientLetter","clientLetterPathLower","vendorLetter","vendorLetterPathLower","H4PassportPathLower","H4MarraigePathLower","H4i94PathLower","H4ChildrenCertificatePathLower","additionalDocument1ForSpouse","additionalDocument1ForSpousePathLower","additionalDocument2ForSpouse","additionalDocument2ForSpousePathLower","additionalDocument3ForSpouse","additionalDocument3ForSpousePathLower","additionalDocument4ForSpouse","additionalDocument4ForSpousePathLower","additionalDocument5ForSpouse","additionalDocument5ForSpousePathLower","additionalDocument1ForEmployee","additionalDocument1ForEmployeePathLower","additionalDocument2ForEmployee","additionalDocument2ForEmployeePathLower","additionalDocument3ForEmployee","additionalDocument3ForEmployeePathLower","additionalDocument4ForEmployee","additionalDocument4ForEmployeePathLower","additionalDocument5ForEmployee","additionalDocument5ForEmployeePathLower","additionalDocument1ForReliableHR","additionalDocument1ForReliableHRPathLower","additionalDocument2ForReliableHR","additionalDocument2ForReliableHRPathLower","additionalDocument3ForReliableHR","additionalDocument3ForReliableHRPathLower","address2","overseasAddress2","homeNumber","workNumber","birthCountry","countryPassport","alienNumber","currentStatusOtherName","when","otherName2","entryValidTill","visaStamping","visaConsulate","USConsulateOther","clientName","clientAddress2","clientCountry","contactNumber","I140ApprovalStartDate","I140Receipt","I140Documents","I140DocumentsURL","reliableDocuments","layer1","layer1Documents","layer1DocumentsURL","layer2","layer2Documents","layer2DocumentsURL","lca","lcaURL","employmentDocs","employmentDocsURL","vendorDocs","vendorDocsURL","attorneyDocuments","attorneyDocument1","attorneyDocument1URL","attorneyDocument2","attorneyDocument2URL","attorneyDocument3","attorneyDocument3URL","attorneyDocument4","attorneyDocument4URL","shouldDisable","downloadButton","submitButton","saveButton","employeeListPageLink","adminPageLink","renderH4Dependent","renderChecklist","renderSpouseH4","renderH4DependentQuestion","renderSpouseH4Question","renderKidsH4Question","renderSSNCopyForSpouse","renderSpouseCountryOther","_this2","_this$state$employeeD2","isAdmin","employeeData","isDisabledTrue","menu","es_radio","val","addDoc1Progress","concat","addDoc1","addDoc1PathLower","addDoc2Progress","addDoc2","addDoc2PathLower","key","label","popover","content","icon","date_picker","disabled","format","defaultValue","es_select","pattern","maxLength","max","href","layout","className","alignContent","paddingLeft","fontWeight","textAlign","SubMenu","Divider","margin","minHeight","collapse","accordion","header","marginLeft","marginRight","clientLetterTemplate","clientLetterTemplatePathLower","vendorLetterTemplate","vendorLetterTemplatePathLower","employmentDocsPathLower","vendorDocsPathLower","layer1DocumentsPathLower","layer2DocumentsPathLower","lcaPathLower","attorneyDocument1PathLower","attorneyDocument2PathLower","attorneyDocument3PathLower","attorneyDocument4PathLower","sucessFormSubmission","loggedInUser","previousFormData","filter","item","undefined","Logout","ForgotPassword","Signup","signUpStatus","alert","columns","dataIndex","EmployeeList","list","onRowSelect","employeelist_Header","employeelist_Content","table","onRow","dataSource","employeelist_Footer","PrivateRoute","_this$props","component","objectWithoutProperties","Route","render","Redirect","Admin","_adminUploads","clientLetterTemplateProgress","vendorLetterTemplateProgress","admin_Header","admin_Content","admin_Footer","PreviousForms","previousforms_Header","previousforms_Content","previousforms_Footer","values","forms","Routes","BrowserRouter","Switch","exact","components_login","forgotpassword","signup","privateroute","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","db","storage","loginAsync","getData","logoutAsync","fileUploadAsync","adminUploadsAsync","createNewImmiFormItemSaga","signUpAsync","forgotPasswordAsync","startListener","rootSaga","database","loginUserServiceCall","signInWithEmailAndPassword","LogoutUserServiceCall","signOut","fileUploadServiceCall","ref","put","snapshot","catch","err","signUpServiceCall","createUserWithEmailAndPassword","forgotPasswordServiceCall","sendPasswordResetEmail","action","regenerator_default","wrap","_context","prev","next","sent","user","t0","stop","_marked","getNewImmiFormData","listener","eventChannel","emit","on","off","getDataChannel","_context2","take","_marked2","_context4","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","insertNewImmiForm","set","_context8","_marked8","_context11","code","_marked11","_context12","_marked12","channel","_context13","emiter","_marked13","_context14","takeLatest","fork","all","_marked14","initialState","visaFormData","image","adminsList","handleSetFormList","newState","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","arguments","message","includes","applyMiddleware","apply","run","App","es","routes","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c02c7a3.chunk.js","sourcesContent":["export const VISA_FORM = 'VISA_FORM';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const FILE_UPLOAD = 'FILE_UPLOAD';\nexport const GET_EMPLOYEE_LIST = 'GET_EMPLOYEE_LIST';\nexport const GET_EMPLOYEE_LIST_SUCCESS = 'GET_EMPLOYEE_LIST_SUCCESS';\nexport const GET_EMPLOYEE_LIST_ERROR = 'GET_EMPLOYEE_LIST_ERROR';\nexport const SIGN_UP = 'SIGN_UP';\nexport const SUBMIT_IMMI_FORM = 'SUBMIT_IMMI_FORM';\nexport const SUBMIT_IMMI_FORM_SUCCESS = 'SUBMIT_IMMI_FORM_SUCCESS';\nexport const FORGOT_PASSWORD = 'FORGOT_PASSWORD';\nexport const ADMIN_UPLOADS = 'ADMIN_UPLOADS'\nexport const SET_EMPLOYEE_DATA = 'SET_EMPLOYEE_DATA';\nexport const GET_DATA = 'GET_DATA';\n","import * as Types from './types';\n\nexport const login = (loginCredentials) => ({\n    type: Types.LOGIN,\n    payload: loginCredentials\n});\n\nexport const visaForm = (formData) => ({\n    type: Types.VISA_FORM,\n    payload: formData\n});\n\nexport const submitImmiFormAction = (formData) => ({\n    type: Types.SUBMIT_IMMI_FORM,\n    payload: formData\n});\n\nexport const logout = () => ({\n    type: Types.LOGOUT\n});\n\nexport const fileUpload = (fileData) => ({\n    type: Types.FILE_UPLOAD,\n    payload: fileData\n});\n\nexport const signUp = (signUpData) => ({\n    type: Types.SIGN_UP,\n    payload: signUpData\n});\n\nexport const forgotPassword = (email) => ({\n    type: Types.FORGOT_PASSWORD,\n    payload: email\n});\n\nexport const getListOfEmployees = () => ({\n    type: Types.GET_EMPLOYEE_LIST\n});\n\nexport const getListOfEmployeesSuccessResponse = (data) => ({\n    type: Types.GET_EMPLOYEE_LIST_SUCCESS,\n    data\n});\n\nexport const adminUploads = (data) => ({\n    type: Types.ADMIN_UPLOADS,\n    payload: data\n});\n\nexport const setEmployeeData = (data) => ({\n    type: Types.SET_EMPLOYEE_DATA,\n    payload: data\n});\n\nexport const getData = () => ({\n  type: Types.GET_DATA\n})\n","import React, { Component } from 'react';\nimport  Validator from 'validator';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../actions';\nimport { Form, Input, Button, Card, Row, Col, Icon } from 'antd';\nimport \"antd/dist/antd.css\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            data:{\n                email: '',\n                password: ''\n            },\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        if(nextProps.loginStatus) {\n            nextProps.history.push(\"/previousforms\");\n        }\n        if(nextProps.error !== \"\") {\n            state.errors = {email: state.error};\n        }\n        return null;\n    }\n\n    onChange = e => this.setState({\n        data: { ...this.state.data, [e.target.name]: e.target.value}\n    });\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state.data);\n        const errors = this.validate(this.state.data);\n        this.setState({errors});\n        if(Object.keys(errors).length===0){\n            this.props.dispatch(login(this.state.data));\n        }\n    };\n\n    validate = data => {\n        const errors = {};\n        if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n        if(!data.password) errors.password = \"Please enter valid Password\";\n        return errors;\n    }\n\n    render() {\n        const { data, errors } = this.state;\n\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', height:'100%' }}>\n                <Row gutter={16}>\n                    <Col offset={8} span={8}>\n                        <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                    </Col>\n                    <Col offset={8} span={8}>\n                        <Card title=\"Login\">\n                            <Form>\n                                <Form.Item error={!!errors.email} style={{color: 'red'}}>\n                                    <Input id=\"email\" type=\"text\" name=\"email\" value= {data.email} onChange={this.onChange} placeholder=\"example@rsrit.com\" />\n                                    {errors.email}\n                                </Form.Item>\n                                <Form.Item error={!!errors.password} style={{color: 'red'}}>\n                                    <Input id=\"password\" type=\"password\" name=\"password\" value= {data.password} onChange={this.onChange} placeholder=\"Make it Secure\" />\n                                    {errors.password}\n                                </Form.Item>\n                                <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n                                <Form.Item>\n                                    <Link style={{float: 'left'}} to=\"/signup\">First time user? Sign Up</Link>\n                                    <Link style={{float: 'right'}} to=\"/forgotpassword\">Forgot Password</Link>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nLogin.protoTypes = {\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        loginStatus: state.loginStatus,\n        error: state.error,\n        getEmployeesList:state.getEmployeesList\n    }\n};\n\nexport default connect(mapStateToProps)(Login);\n","export const STATES_LIST = [\n    {\n        \"name\": \"Alabama\",\n        \"abbreviation\": \"AL\"\n    },\n    {\n        \"name\": \"Alaska\",\n        \"abbreviation\": \"AK\"\n    },\n    {\n        \"name\": \"American Samoa\",\n        \"abbreviation\": \"AS\"\n    },\n    {\n        \"name\": \"Arizona\",\n        \"abbreviation\": \"AZ\"\n    },\n    {\n        \"name\": \"Arkansas\",\n        \"abbreviation\": \"AR\"\n    },\n    {\n        \"name\": \"California\",\n        \"abbreviation\": \"CA\"\n    },\n    {\n        \"name\": \"Colorado\",\n        \"abbreviation\": \"CO\"\n    },\n    {\n        \"name\": \"Connecticut\",\n        \"abbreviation\": \"CT\"\n    },\n    {\n        \"name\": \"Delaware\",\n        \"abbreviation\": \"DE\"\n    },\n    {\n        \"name\": \"District Of Columbia\",\n        \"abbreviation\": \"DC\"\n    },\n    {\n        \"name\": \"Federated States Of Micronesia\",\n        \"abbreviation\": \"FM\"\n    },\n    {\n        \"name\": \"Florida\",\n        \"abbreviation\": \"FL\"\n    },\n    {\n        \"name\": \"Georgia\",\n        \"abbreviation\": \"GA\"\n    },\n    {\n        \"name\": \"Guam\",\n        \"abbreviation\": \"GU\"\n    },\n    {\n        \"name\": \"Hawaii\",\n        \"abbreviation\": \"HI\"\n    },\n    {\n        \"name\": \"Idaho\",\n        \"abbreviation\": \"ID\"\n    },\n    {\n        \"name\": \"Illinois\",\n        \"abbreviation\": \"IL\"\n    },\n    {\n        \"name\": \"Indiana\",\n        \"abbreviation\": \"IN\"\n    },\n    {\n        \"name\": \"Iowa\",\n        \"abbreviation\": \"IA\"\n    },\n    {\n        \"name\": \"Kansas\",\n        \"abbreviation\": \"KS\"\n    },\n    {\n        \"name\": \"Kentucky\",\n        \"abbreviation\": \"KY\"\n    },\n    {\n        \"name\": \"Louisiana\",\n        \"abbreviation\": \"LA\"\n    },\n    {\n        \"name\": \"Maine\",\n        \"abbreviation\": \"ME\"\n    },\n    {\n        \"name\": \"Marshall Islands\",\n        \"abbreviation\": \"MH\"\n    },\n    {\n        \"name\": \"Maryland\",\n        \"abbreviation\": \"MD\"\n    },\n    {\n        \"name\": \"Massachusetts\",\n        \"abbreviation\": \"MA\"\n    },\n    {\n        \"name\": \"Michigan\",\n        \"abbreviation\": \"MI\"\n    },\n    {\n        \"name\": \"Minnesota\",\n        \"abbreviation\": \"MN\"\n    },\n    {\n        \"name\": \"Mississippi\",\n        \"abbreviation\": \"MS\"\n    },\n    {\n        \"name\": \"Missouri\",\n        \"abbreviation\": \"MO\"\n    },\n    {\n        \"name\": \"Montana\",\n        \"abbreviation\": \"MT\"\n    },\n    {\n        \"name\": \"Nebraska\",\n        \"abbreviation\": \"NE\"\n    },\n    {\n        \"name\": \"Nevada\",\n        \"abbreviation\": \"NV\"\n    },\n    {\n        \"name\": \"New Hampshire\",\n        \"abbreviation\": \"NH\"\n    },\n    {\n        \"name\": \"New Jersey\",\n        \"abbreviation\": \"NJ\"\n    },\n    {\n        \"name\": \"New Mexico\",\n        \"abbreviation\": \"NM\"\n    },\n    {\n        \"name\": \"New York\",\n        \"abbreviation\": \"NY\"\n    },\n    {\n        \"name\": \"North Carolina\",\n        \"abbreviation\": \"NC\"\n    },\n    {\n        \"name\": \"North Dakota\",\n        \"abbreviation\": \"ND\"\n    },\n    {\n        \"name\": \"Northern Mariana Islands\",\n        \"abbreviation\": \"MP\"\n    },\n    {\n        \"name\": \"Ohio\",\n        \"abbreviation\": \"OH\"\n    },\n    {\n        \"name\": \"Oklahoma\",\n        \"abbreviation\": \"OK\"\n    },\n    {\n        \"name\": \"Oregon\",\n        \"abbreviation\": \"OR\"\n    },\n    {\n        \"name\": \"Palau\",\n        \"abbreviation\": \"PW\"\n    },\n    {\n        \"name\": \"Pennsylvania\",\n        \"abbreviation\": \"PA\"\n    },\n    {\n        \"name\": \"Puerto Rico\",\n        \"abbreviation\": \"PR\"\n    },\n    {\n        \"name\": \"Rhode Island\",\n        \"abbreviation\": \"RI\"\n    },\n    {\n        \"name\": \"South Carolina\",\n        \"abbreviation\": \"SC\"\n    },\n    {\n        \"name\": \"South Dakota\",\n        \"abbreviation\": \"SD\"\n    },\n    {\n        \"name\": \"Tennessee\",\n        \"abbreviation\": \"TN\"\n    },\n    {\n        \"name\": \"Texas\",\n        \"abbreviation\": \"TX\"\n    },\n    {\n        \"name\": \"Utah\",\n        \"abbreviation\": \"UT\"\n    },\n    {\n        \"name\": \"Vermont\",\n        \"abbreviation\": \"VT\"\n    },\n    {\n        \"name\": \"Virgin Islands\",\n        \"abbreviation\": \"VI\"\n    },\n    {\n        \"name\": \"Virginia\",\n        \"abbreviation\": \"VA\"\n    },\n    {\n        \"name\": \"Washington\",\n        \"abbreviation\": \"WA\"\n    },\n    {\n        \"name\": \"West Virginia\",\n        \"abbreviation\": \"WV\"\n    },\n    {\n        \"name\": \"Wisconsin\",\n        \"abbreviation\": \"WI\"\n    },\n    {\n        \"name\": \"Wyoming\",\n        \"abbreviation\": \"WY\"\n    }\n]","export const COUNTRIES_LIST = [\n    {\n        \"name\": \"India\"\n    },\n    {\n        \"name\": \"US\"\n    },\n    {\n        \"name\": \"China\"\n    },\n    {\n        \"name\": \"Mexico\"\n    },\n    {\n        \"name\": \"Other\"\n    }\n]","import React, {Component} from 'react';\nimport  Validator from 'validator';\nimport { Menu, Collapse, Select, Popover, Icon, Form, Radio , DatePicker, Layout, Input, Row, Col, Button, Card} from 'antd';\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fileUpload, submitImmiFormAction, getListOfEmployees } from '../../actions';\nimport moment from 'moment';\n// import { storage } from '../../firebase';\nimport { DROPBOX_ACCESS_TOKEN_KEY } from '../../stores/config';\nimport { STATES_LIST } from '../../stores/states_titlecase';\nimport { COUNTRIES_LIST } from '../../stores/countries_list';\n\n// import html2canvas and jspdf to export webpage to pdf and download\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nconst pdf = new jsPDF();\n\n//To access data from the web\nconst xhr = new XMLHttpRequest();\n// import file saver to download the file's\nconst FileSaver = require('file-saver');\n\n//Access token to acces dropbox account\nconst dropboxToken = DROPBOX_ACCESS_TOKEN_KEY;\n\nconst { Header, Content, Footer } = Layout;\nconst RadioGroup = Radio.Group;\nconst Panel = Collapse.Panel;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\nclass H1bForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress:0,\n            passportPageProgress :0,\n            i94Progress:0,\n            evidenceProgress:0,\n            payStubsProgress:0,\n            clientLetterProgress: 0,\n            vendorLetterProgress: 0,\n            mastersTranscriptsProgress:0,\n            bachelorDegreeProgress:0,\n            resumeProgress:0,\n            ssnCopyProgress:0,\n            ssnCopyForKidsProgress:0,\n            ssnCopyForSpouseProgress: 0,\n            universityDocsProgress:0,\n            I140DocumentsProgress:0,\n            employmentDocsProgress:0,\n            vendorDocsProgress:0,\n            layer1DocumentsProgress: 0,\n            layer2DocumentsProgress: 0,\n            lcaProgress: 0,\n            attorneyDocument1Progress: 0,\n            attorneyDocument2Progress: 0,\n            attorneyDocument3Progress: 0,\n            attorneyDocument4Progress: 0,\n            H4PassportProgress: 0,\n            H4MarraigeProgress: 0,\n            H4i94Progress: 0,\n            H4ChildrenCertificateProgress: 0,\n            additionalDocument1ForSpouseProgress: 0,\n            additionalDocument2ForSpouseProgress: 0,\n            additionalDocument3ForSpouseProgress: 0,\n            additionalDocument4ForSpouseProgress: 0,\n            additionalDocument5ForSpouseProgress: 0,\n            additionalDocument1ForEmployeeProgress: 0,\n            additionalDocument2ForEmployeeProgress: 0,\n            additionalDocument3ForEmployeeProgress: 0,\n            additionalDocument4ForEmployeeProgress: 0,\n            additionalDocument5ForEmployeeProgress: 0,\n            additionalDocument1ForReliableHRProgress: 0,\n            additionalDocument2ForReliableHRProgress: 0,\n            additionalDocument3ForReliableHRProgress: 0,\n            employeeDetails:{\n                employeeID: '',\n                typeOfApplication: 'CAP H1B',\n                premiumProcessInfo: '',\n                firstName: '',\n                middleName: '',\n                lastName: '',\n                comment: '',\n                resume: '',\n                resumePathLower: '',\n                bachelorDegree: '',\n                bachelorDegreePathLower: '',\n                mastersTranscripts: '',\n                mastersTranscriptsPathLower: '',\n                payStubs: '',\n                payStubsPathLower: '',\n                passportPage: '',\n                passportPagePathLower: '',\n                i94: '',\n                i94PathLower: '',\n                evidence: '',\n                evidencePathLower: '',\n                ssnCopy: '',\n                ssnCopyPathLower: '',\n                ssnCopyForKids: '',\n                ssnCopyForKidsPathLower: '',\n                ssnCopyForSpouse: '',\n                ssnCopyForSpousePathLower: '',\n                universityDocs: '',\n                universityDocsPathLower: '',\n                clientLetter: '',\n                clientLetterPathLower: '',\n                vendorLetter: '',\n                vendorLetterPathLower: '',\n                H4Passport: 0,\n                H4PassportPathLower: 0,\n                H4Marraige: 0,\n                H4MarraigePathLower: 0,\n                H4i94: 0,\n                H4i94PathLower: 0,\n                H4ChildrenCertificate: '',\n                H4ChildrenCertificatePathLower: '',\n                additionalDocument1ForSpouse: '',\n                additionalDocument1ForSpousePathLower: '',\n                additionalDocument2ForSpouse: '',\n                additionalDocument2ForSpousePathLower: '',\n                additionalDocument3ForSpouse: '',\n                additionalDocument3ForSpousePathLower: '',\n                additionalDocument4ForSpouse: '',\n                additionalDocument4ForSpousePathLower: '',\n                additionalDocument5ForSpouse: '',\n                additionalDocument5ForSpousePathLower: '',\n                additionalDocument1ForEmployee: '',\n                additionalDocument1ForEmployeePathLower: '',\n                additionalDocument2ForEmployee: '',\n                additionalDocument2ForEmployeePathLower: '',\n                additionalDocument3ForEmployee: '',\n                additionalDocument3ForEmployeePathLower: '',\n                additionalDocument4ForEmployee: '',\n                additionalDocument4ForEmployeePathLower: '',\n                additionalDocument5ForEmployee: '',\n                additionalDocument5ForEmployeePathLower: '',\n                additionalDocument1ForReliableHR: '',\n                additionalDocument1ForReliableHRPathLower: '',\n                additionalDocument2ForReliableHR: '',\n                additionalDocument2ForReliableHRPathLower: '',\n                additionalDocument3ForReliableHR: '',\n                additionalDocument3ForReliableHRPathLower: '',\n                addressDetails:{\n                  address1:'',\n                  address2:'',\n                  city:'',\n                  state:'',\n                  zipCode:'',\n                  country: ''\n                },\n                overseasAddressDetails:{\n                    overseasAddress1:'',\n                    overseasAddress2:'',\n                    overseasCity:'',\n                    overseasState:'',\n                    overseasZipCode:'',\n                    overseasCountry: ''\n                },\n                contactDetails:{\n                    homeNumber:'',\n                    workNumber:'',\n                    mobileNumber:'',\n                    email:''\n                },\n                passportDetails: {\n                    birthCountry: '',\n                    dateOfBirth: '',\n                    countryPassport: '',\n                    passportNumber: '',\n                    issueDate: '',\n                    expirationDate: '',\n                    countryOfCitizenship: '',\n                    socialSecurityNumber: '',\n                    alienNumber: ''\n                },\n                immigirationDetails: {\n                    currentStatus: '',\n                    currentStatusOtherName: '',\n                    USVisaIssued: '',\n                    when: '',\n                    visaExpireDate: '',\n                    immigrationConsule: '',\n                    consulateCity: '',\n                    consulateCountry: '',\n                    otherName2: '',\n                    i94Number: '',\n                    entryValidTill: '',\n                    lastEntryUS: '',\n                    portOfEntry: '',\n                    visaStamping: '',\n                    visaConsulate: '',\n                    USConsulateOther: ''\n                },\n                // travelDetails: {\n                //     startDate: '',\n                //     endDate: '',\n                //     daysCount: ''\n                // },\n                travelHistory: [],\n                kidsDetails: [],\n                H4CheckListDetails: {\n                    H4Passport: '',\n                    H4i94: '',\n                    H4Approval: '',\n                    H4Marraige: '',\n                    H4ChildrenCertificate: ''\n                },\n                workDetails:{\n                    clientName: '',\n                    clientAddress: '',\n                    clientAddress2: '',\n                    clientCity: '',\n                    clientState: '',\n                    clientCountry: '',\n                    clientZipCode: '',\n                    vendorName: '',\n                    vendorEmail: '',\n                    contactNumber: '',\n                    projectStartDate: ''\n                },\n                I140Detials: {\n                    I140Approval: '',\n                    I140ApprovalStartDate: '',\n                    I140Receipt: '',\n                    I140Documents: '',\n                    I140DocumentsURL: ''\n                },\n                spouseDetails: {\n                    maritalStatus: '',\n                    spouseH4: '',\n                    dependenceRelationship: ''\n                },\n                H4Details: {\n                    spouseFirstName: '',\n                    spouseLastName: '',\n                    spouseBirthDate: '',\n                    spouseCountry: '',\n                    spouseCountryOfCitizen: '',\n                    marraigeDate: '',\n                    countryOfMarraige: '',\n                    spouseImmigrationStatus: '',\n                    spouseSocialSecurityNumber: '',\n                    dependenceRelationship: '',\n                    spouseCurrentAddress1: '',\n                    spouseCurrentAddress2: '',\n                    spouseCity: '',\n                    spouseState: '',\n                    spouseZipcode: '',\n                    spouseComment: ''\n                }\n            },\n            reliableDocuments: {\n                layer1: '',\n                layer1Documents: '',\n                layer1DocumentsURL: '',\n                layer2: '',\n                layer2Documents: '',\n                layer2DocumentsURL: '',\n                lca: '',\n                lcaURL: '',\n                employmentDocs: '',\n                employmentDocsURL: '',\n                vendorDocs: '',\n                vendorDocsURL: ''\n            },\n            attorneyDocuments: {\n                attorneyDocument1: '',\n                attorneyDocument1URL: '',\n                attorneyDocument2: '',\n                attorneyDocument2URL: '',\n                attorneyDocument3: '',\n                attorneyDocument3URL: '',\n                attorneyDocument4: '',\n                attorneyDocument4URL: '',\n            },\n            errors: {},\n            previewVisible: false,\n            previewImage: '',\n            fileList: [],\n            shouldDisable: false,\n            isMarried: false,\n            isH4DependentAvailable: false,\n            isH4ReuiredForSpouse: false,\n            haveKids: false\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.exportToPdf = this.exportToPdf.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getListOfEmployees());\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        if(nextProps.sucessFormSubmission) {\n            // nextProps.dispatch(getListOfEmployees());\n            // alert(\"Sucessfully Submitted the Form.\")\n        }\n        if(Object.keys(nextProps.employeeData).length !== 0) {\n            state.employeeDetails = nextProps.employeeData;\n            state.shouldDisable = true;\n        }\n        state.employeeDetails.employeeID = nextProps.loggedInUser.email;\n        const previousFormData = nextProps.getEmployeesList.filter(function(item) { return item.employeeID === nextProps.loggedInUser.email});\n        if(previousFormData.length > 0) {\n    \t\t\tif(previousFormData[0].kidsDetails === undefined) {\n    \t\t\t\tpreviousFormData[0].kidsDetails = [];\n    \t\t\t}\n    \t\t\tif(previousFormData[0].travelHistory === undefined) {\n    \t\t\t\tpreviousFormData[0].travelHistory = [];\n    \t\t\t}\n          state.employeeDetails = previousFormData[0];\n        }\n    }\n\n    //-------------------------------------------------------------------------------------------------------\n    // Dynamically adding form fields\n\n    addTravelHistory = () => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        let travelHistory = {};\n        travelHistory.arrivalDate = moment().valueOf();\n        travelHistory.departureDate = moment().valueOf();\n        travelHistory.daysSpent = '';\n        employeeDetails.travelHistory.push(travelHistory);\n        return this.setState({employeeDetails});\n    }\n\n    // handleTravelHistoryChange = (e) => {\n    //     if ([\"name\", \"id\"].includes(e.target.className) ) {\n    //       let travelHistory = [...this.state.employeeDetails.travelHistory]\n    //       travelHistory[e.target.id.split(\"-\")[1]][e.target.className] = e.target.value.toUpperCase()\n    //       this.setState({ travelHistory }, () => console.log(this.state.employeeDetails.travelHistory))\n    //     } else {\n    //       this.setState({ [e.target.name]: e.target.value.toUpperCase() })\n    //     }\n    // }\n\n    addKidsDetails = () => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n\n        let length = employeeDetails.kidsDetails.length + 1;\n        this.setState({[\"additionalDocument1ForKid\"+ length +\"Progress\"]: 0, [\"additionalDocument2ForKid\"+ length +\"Progress\"]: 0});\n        employeeDetails[\"additionalDocument1ForKid\"+ length] = '';\n        employeeDetails[\"additionalDocument1ForKid\"+ length +\"PathLower\"] = '';\n        employeeDetails[\"additionalDocument2ForKid\"+ length] = '';\n        employeeDetails[\"additionalDocument2ForKid\"+ length +\"PathLower\"] = '';\n\n        let kidsDetails = {};\n        kidsDetails.dependenceRelationship2 = '';\n        kidsDetails.kidFullName = '';\n        kidsDetails.kidGender = '';\n        kidsDetails.kidMaritalStatus = '';\n        kidsDetails.kidBirthDate = '';\n        kidsDetails.kidCountry = '';\n        kidsDetails.kidCountryOfCitizen = '';\n        kidsDetails.kidImmigrationStatus = '';\n        kidsDetails.kidSocialSecurityNumber = '';\n        kidsDetails.kidCurrentAddress = '';\n        kidsDetails.kidComment = '';\n        employeeDetails.kidsDetails.push(kidsDetails);\n        return this.setState({employeeDetails});\n    }\n\n    //--------------------------------------------------------------------------------------------------------\n    //Date functions\n\n    onBirthDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.passportDetails[\"dateOfBirth\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onPassportIssueDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.passportDetails[\"issueDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onPassportExpirationDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.passportDetails[\"expirationDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onImmigrationUSVisaIssuedDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"USVisaIssued\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onImmigrationWhenDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"when\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onImmigrationvisaExpireDateDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"visaExpireDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onImmigrationEntryValidTillDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"entryValidTill\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onImmigrationLastEntryUSDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"lastEntryUS\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onPortOfEntryDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"portOfEntry\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onVisaStampingDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"visaStamping\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onTravelInfoStartDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelDetails[\"startDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onTravelInfoEndDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelDetails[\"endDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onTravelHistoryArrivalDateChange = idx => (e, date) => {\n        // console.log(idx);\n        const travelHistory = this.state.employeeDetails.travelHistory.map((travel, sidx) => {\n            if (idx !== sidx) return travel;\n            return { ...travel, arrivalDate: moment(date).valueOf() };\n        });\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelHistory = travelHistory;\n        return this.setState({employeeDetails});\n    };\n\n    onTravelHistoryDepartureDateChange = idx => (e, date) => {\n        // console.log(idx);\n        const travelHistory = this.state.employeeDetails.travelHistory.map((travel, sidx) => {\n            if (idx !== sidx) return travel;\n            return { ...travel, departureDate: moment(date).valueOf() };\n        });\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelHistory = travelHistory;\n        return this.setState({employeeDetails});\n    };\n\n    onI140ReceiptDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.I140Detials[\"I140Receipt\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onI140ApprovalStartDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.I140Detials[\"I140ApprovalStartDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onI140DateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.I140Detials[\"I140Approval\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onKidBirthDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.kidsDetails[\"kidBirthDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onSpouseBirthDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"spouseBirthDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onMarraigeDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"marraigeDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    onProjectStartDateChange = (e, date) => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.workDetails[\"projectStartDate\"] = moment(date).valueOf();\n        return this.setState({employeeDetails});\n    };\n\n    //------------------------------------------------------------------------------------------------\n    // Change Functions\n\n    onChange = e => this.setState({\n        employeeDetails: { ...this.state.employeeDetails, [e.target.name]: e.target.value}\n    });\n\n    onContactChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.contactDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onAddressChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.addressDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onStateSelect = state => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.addressDetails[\"state\"] = state;\n        return this.setState({employeeDetails});\n    }\n\n    onOverseasStateSelect = state => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.overseasAddressDetails[\"overseasState\"] = state;\n        return this.setState({employeeDetails});\n    }\n\n    onClientStateSelect = state => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.workDetails[\"clientState\"] = state;\n        return this.setState({employeeDetails});\n    }\n\n    onSpouseStateSelect = state => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"spouseState\"] = state;\n        return this.setState({employeeDetails});\n    }\n\n    onOverseasAddressChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.overseasAddressDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onPassportDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.passportDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onImmigirationDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onTravelDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onTravelHistoryChange = idx => e => {\n        // console.log(idx);\n        const travelHistory = this.state.employeeDetails.travelHistory.map((travel, sidx) => {\n            if (idx !== sidx) return travel;\n            return { ...travel, daysSpent: e.target.value };\n        });\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.travelHistory = travelHistory;\n        return this.setState({employeeDetails});\n    };\n\n    onH4CheckListDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4CheckListDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onDependencyRelationChange = state => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"dependenceRelationship\"] = state;\n        return this.setState({employeeDetails});\n    }\n\n    onI140DetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.I140Detials[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onSpouseDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.spouseDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onKidsDetailsChange = idx => e => {\n        // console.log(idx);\n        const kidsDetails = this.state.employeeDetails.kidsDetails.map((kid, sidx) => {\n            if (idx !== sidx) return kid;\n            return { ...kid, [e.target.name]: e.target.value };\n        });\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.kidsDetails = kidsDetails;\n        return this.setState({employeeDetails});\n    };\n\n    onH4DetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    onWorkDetailsChange = e => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.workDetails[e.target.name] = e.target.value;\n        return this.setState({employeeDetails});\n    };\n\n    //------------------------------------------------------------------------------------------------------\n    // Country change functions\n\n    onSpouseCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"spouseCountry\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onSpouseCountryOfCitizenChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"spouseCountryOfCitizen\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onSpouseCountryOfMarraigeChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.H4Details[\"countryOfMarraige\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onKidCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.kidsDetails[\"kidCountry\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onKidCountryOfCitizenChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.kidsDetails[\"kidCountryOfCitizen\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onAddressCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.addressDetails[\"country\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onOverseasAddressCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.overseasAddressDetails[\"overseasCountry\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onPassportCountryOfCitizenChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.passportDetails[\"countryOfCitizenship\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onConsuleCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.immigirationDetails[\"consulateCountry\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    onClientCountryChange = country => {\n        let employeeDetails = Object.assign({}, this.state.employeeDetails);\n        employeeDetails.workDetails[\"clientCountry\"] = country;\n        return this.setState({employeeDetails});\n    }\n\n    //------------------------------------------------------------------------------------------------------\n    // File Upload functions\n\n    handleCancel = () => this.setState({ previewVisible: false })\n\n    handlePreview = (file) => {\n        this.setState({\n            previewImage: file.url || file.thumbUrl,\n            previewVisible: true,\n        });\n    }\n\n    handleChange = ({ fileList }) => {\n        this.setState({ fileList });\n        this.props.dispatch(fileUpload(fileList));\n    }\n\n    //Upload file to the dropbox\n\n    uploadFile = (e, fN) => {\n\n        if(fN === 'Spouse') {\n            fN = 'Employee/Spouse';\n        }\n        if(fN === 'Kids') {\n            fN = 'Employee/Kids';\n        }\n        // this keyword is not working inside the xhr functions, th is declared as proxy to this keyword\n        const th = this;\n        // let errorDetails = Object.assign({}, this.state.errors);\n        let errorDetails = new Map();\n\t\t    console.log(e.target.files[0].type);\n\n        const file = e.target.files[0];\n        const filename = e.target.name;\n\n        if(this.state.employeeDetails.firstName !== \"\" && this.state.employeeDetails.lastName !== \"\"){\n            const {firstName, lastName} =  this.state.employeeDetails;\n            const { employeeDetails } = this.state;\n\n            if(e.target.files[0].type === \"application/pdf\" || e.target.files[0].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n\t\t\t\t|| e.target.files[0].type ===  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n\n                xhr.upload.onprogress = function(evt) {\n                    const percentComplete = parseInt(100.0 * evt.loaded / evt.total);\n                    th.setState({[filename+\"Progress\"] :percentComplete});\n                    // Upload in progress. Do something here with the percent complete.\n                };\n\n                xhr.onload = function() {\n                    if (xhr.status === 200) {\n                        const fileInfo = JSON.parse(xhr.response);\n                        // console.log(fileInfo);\n                        errorDetails[filename] = '';\n                        employeeDetails[filename] = fileInfo.name;\n                        employeeDetails[filename+\"PathLower\"] = fileInfo.path_lower;\n                        th.setState({employeeDetails: employeeDetails});\n                        // console.log(th.state);\n                        // Upload succeeded. Do something here with the file info.\n                    }\n                    else {\n                        const errorMessage = xhr.response || 'Unable to upload file';\n                        console.log(errorMessage);\n                        // Upload failed. Do something here with the error.\n                    }\n                };\n\n                xhr.open('POST', 'https://content.dropboxapi.com/2/files/upload');\n                xhr.setRequestHeader('Authorization', 'Bearer ' + dropboxToken);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n                xhr.setRequestHeader('Dropbox-API-Arg', JSON.stringify({\n                path: '/' + 'Talent team Team Folder' +'/'+ firstName +' ' +lastName+ '/'+ fN + '/'+file.name,\n                mode: 'add',\n                autorename: true,\n                mute: false\n                }));\n\n                xhr.send(file);\n\n                // let fileData = {\n                //     firstName: firstName,\n                //     lastName: lastName,\n                //     folderFileName: firstName+ \" \" +lastName + \"/\"+fN+\"/\"+e.target.name+\"/\",\n                //     inputFileName:e.target.name,\n                //     file: e.target.files[0]\n                // };\n                // this.handleUpload(fileData);\n                //this.props.dispatch(fileUpload(fileData));\n            } else {\n                errorDetails[filename] = 'Please upload Valid files';\n            }\n        } else {\n            errorDetails[filename] = 'Enter the Name of the Employee';\n        }\n        this.setState({errors: errorDetails});\n    };\n\n    // Download file from the dropbox\n\n    downloadFile = ( evt, fileName, filePathLower) => {\n        evt.preventDefault();\n        // xhr.responseType = 'arraybuffer';\n\n        xhr.onload = function() {\n            if (xhr.status === 200) {\n                const blob = new Blob([xhr.response], {type: 'application/octet-stream'});\n                FileSaver.saveAs(blob, fileName, true);\n                // Download succeeded. Do something here with the file info.\n            }\n            else {\n                const errorMessage = xhr.response || 'Unable to download file';\n                console.log(errorMessage);\n                // Download failed. Do something here with the error.\n            }\n        };\n\n        xhr.open('POST', 'https://content.dropboxapi.com/2/files/download');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + dropboxToken);\n        xhr.setRequestHeader('Dropbox-API-Arg', JSON.stringify({\n            path: filePathLower\n        }));\n        xhr.send();\n    }\n\n    // Upload Document to Employee folder\n    // handleUpload = (fileData) => {\n    //     const uploadTask = storage.ref(fileData.folderFileName + fileData.file.name).put(fileData.file);\n    //     uploadTask.on('state_changed',\n    //     (snapshot) => {\n    //       // progrss function ....\n    //       const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n    //       this.setState({[fileData.inputFileName+\"Progress\"] :progress});\n    //     },\n    //     (error) => {\n    //          // error function ....\n    //       console.log(\"file upload \"+error);\n    //     },\n    //   () => {\n    //       // complete function ....\n    //       storage.ref(fileData.folderFileName).child(fileData.file.name).getDownloadURL().then(url => {\n    //           this.setState({[fileData.inputFileName+\"URL\"]:url});\n    //           console.log(this.state);\n    //       })\n    //   });\n    // }\n\n    // Function to take screenshot and eport to pdf\n\n    exportToPdf = () => {\n        //get data from react render and assign to variable\n        // const formData = document.getElementById('mainDiv');\n        const formData = document.getElementById('personalInformationForm');\n        html2canvas(formData)\n            .then((canvas) => {\n                // make a screenshot of the webpage\n                const screenshot = canvas.toDataURL('image/png');\n                //convert screenshot to the pdf\n                pdf.addImage(screenshot, 'JPEG', 15, 40, 180, 160);\n                //download pdf\n                pdf.save(\"download.pdf\");\n            });\n    }\n\n\t// Save function\n\n\tonSave = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.dispatch(submitImmiFormAction(this.state.employeeDetails));\n    };\n\n    // Submit Function\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        const errors = this.validate(this.state.employeeDetails);\n        this.setState({errors: errors});\n        if(Object.keys(errors).length === 0) {\n            this.props.dispatch(submitImmiFormAction(this.state.employeeDetails));\n        }\n    };\n\n    // Validation Function\n\n    validate = employeeDetails => {\n        // console.log(employeeDetails);\n        const errors = {};\n\n        // if(!employeeDetails.typeOfApplication)\n        //     errors.typeOfApplication = \"Can't be empty\";\n        // else\n        //     delete errors.typeOfApplication;\n        // if(!employeeDetails.premiumProcessInfo) errors.premiumProcessInfo = \"Can't be empty\";\n\n        if(!employeeDetails.firstName)\n            errors.firstName = \"Can't be empty\";\n        else\n            delete errors.firstName;\n        // if(!employeeDetails.middleName) errors.middleName = \"Can't be empty\";\n        if(!employeeDetails.lastName)\n            errors.lastName = \"Can't be empty\";\n        else\n            delete errors.lastName;\n\n        //Address Details\n        if(!employeeDetails.addressDetails.address1)\n            errors.address1 = \"Can't be empty\";\n        else\n            delete errors.address1;\n\n        // if(!employeeDetails.addressDetails.address2)\n        //     errors.address2 = \"Can't be empty\";\n        // else\n        //     delete errors.address2;\n\n        if(!employeeDetails.addressDetails.city)\n            errors.city = \"Can't be empty\";\n        else\n            delete errors.city;\n\n        if(!employeeDetails.addressDetails.state)\n            errors.state = \"Can't be empty\";\n        else\n            delete errors.state;\n\n        if(!employeeDetails.addressDetails.country)\n            errors.country = \"Can't be empty\";\n        else\n            delete errors.country;\n\n        if(!Validator.isNumeric(employeeDetails.addressDetails.zipCode) && employeeDetails.addressDetails.zipCode.length === 5)\n            errors.zipCode = \"Can't be empty\";\n        else\n            delete errors.zipCode;\n\n        //Previous Address Details\n        if(!employeeDetails.overseasAddressDetails.overseasAddress1)\n            errors.overseasAddress1 = \"Can't be empty\";\n        else\n            delete errors.overseasAddress1;\n\n        // if(!employeeDetails.overseasAddressDetails.overseasAddress2)\n        //     errors.overseasAddress2 = \"Can't be empty\";\n        // else\n        //     delete errors.overseasAddress2;\n\n        if(!employeeDetails.overseasAddressDetails.overseasCity)\n            errors.overseasCity = \"Can't be empty\";\n        else\n            delete errors.overseasCity;\n\n        if(!employeeDetails.overseasAddressDetails.overseasState)\n            errors.overseasState = \"Can't be empty\";\n        else\n            delete errors.overseasState;\n\n        if(employeeDetails.overseasAddressDetails.overseasZipCode.length === 5)\n            errors.overseasZipCode = \"Can't be empty\";\n        else\n            delete errors.overseasZipCode;\n\n        if(!employeeDetails.overseasAddressDetails.overseasCountry)\n            errors.overseasCountry = \"Can't be empty\";\n        else\n            delete errors.overseasCountry;\n\n        //Contact Details\n        // if(!Validator.isNumeric(employeeDetails.contactDetails.homeNumber)) errors.homeNumber = \"Enter Home Number\";\n        // if(!Validator.isNumeric(employeeDetails.contactDetails.workNumber)) errors.workNumber = \"Enter Work Number\";\n        if(!employeeDetails.contactDetails.mobileNumber.length === 10)\n            errors.mobileNumber = \"Can't be empty\";\n        else\n            delete errors.mobileNumber;\n\n        if(!Validator.isEmail(employeeDetails.contactDetails.email))\n            errors.email = \"Can't be empty\";\n        else\n            delete errors.email;\n\n        //Passport Details\n        if(!employeeDetails.passportDetails.passportNumber)\n            errors.passportNumber = \"Can't be empty\";\n        else\n            delete errors.passportNumber;\n\n        // if(!employeeDetails.passportDetails.birthCountry) errors.birthCountry = \"Cant't be empty\";\n        if(!employeeDetails.passportDetails.dateOfBirth)\n            errors.dateOfBirth = \"Can't be empty\";\n        else\n            delete errors.dateOfBirth ;\n\n        if(!employeeDetails.passportDetails.issueDate)\n            errors.issueDate = \"Can't be empty\";\n        else\n            delete errors.issueDate ;\n\n        if(!employeeDetails.passportDetails.expirationDate)\n            errors.expirationDate = \"Can't be empty\";\n        else\n            delete errors.expirationDate ;\n\n        // if(!employeeDetails.passportDetails.countryPassport) errors.countryPassport = \"Cant't be empty\";\n        if(!employeeDetails.passportDetails.countryOfCitizenship)\n            errors.countryOfCitizenship = \"Can't be empty\";\n        else\n            delete errors.countryOfCitizenship;\n\n        if(!employeeDetails.passportDetails.socialSecurityNumber)\n            errors.socialSecurityNumber = \"Can't be empty\";\n        else\n            delete errors.socialSecurityNumber ;\n\n        // if(!employeeDetails.passportDetails.alienNumber) errors.alienNumber = \"Cant't be empty\";\n\n        //Immigration Details\n        if(!employeeDetails.immigirationDetails.currentStatus)\n            errors.currentStatus = \"Can't be empty\";\n        else\n            delete errors.currentStatus ;\n\n        // if(!employeeDetails.immigirationDetails.currentStatusOtherName) errors.currentStatusOtherName = \"Cant't be empty\";\n        if(!employeeDetails.immigirationDetails.USVisaIssued)\n            errors.USVisaIssued = \"Can't be empty\";\n        else\n            delete errors.lastNaUSVisaIssuedme ;\n\n        // if(!employeeDetails.immigirationDetails.when) errors.when = \"Cant't be empty\";\n        if(!employeeDetails.immigirationDetails.visaExpireDate)\n            errors.visaExpireDate = \"Can't be empty\";\n        else\n            delete errors.visaExpireDate ;\n\n        if(!employeeDetails.immigirationDetails.immigrationConsule)\n            errors.immigrationConsule = \"Can't be empty\";\n        else\n            delete errors.immigrationConsule ;\n\n        if(!employeeDetails.immigirationDetails.consulateCity)\n            errors.consulateCity = \"Can't be empty\";\n        else\n            delete errors.consulateCity;\n\n        if(!employeeDetails.immigirationDetails.consulateCountry)\n            errors.consulateCountry = \"Can't be empty\";\n        else\n            delete errors.consulateCountry ;\n\n        // if(!employeeDetails.immigirationDetails.otherName2) errors.otherName2 = \"Cant't be empty\";\n        if(employeeDetails.immigirationDetails.i94Number.length === 11)\n            errors.i94Number = \"Can't be empty\";\n        else\n            delete errors.i94Number ;\n\n       // if(!employeeDetails.immigirationDetails.entryValidTill) errors.entryValidTill = \"Cant't be empty\";\n        if(!employeeDetails.immigirationDetails.lastEntryUS)\n            errors.lastEntryUS = \"Can't be empty\";\n        else\n            delete errors.lastEntryUS ;\n\n        if(!employeeDetails.immigirationDetails.portOfEntry)\n            errors.portOfEntry = \"Can't be empty\";\n        else\n            delete errors.portOfEntry;\n\n        // if(!employeeDetails.immigirationDetails.visaStamping) errors.visaStamping = \"Cant't be empty\";\n        // if(!employeeDetails.immigirationDetails.visaConsulate) errors.visaConsulate = \"Cant't be empty\";\n        // if(!employeeDetails.immigirationDetails.USConsulateOther) errors.USConsulateOther = \"Cant't be empty\";\n\n        //Travel Details\n        // if(!employeeDetails.travelDetails.startDate) errors.startDate = \"Can't be empty\";\n        // if(!employeeDetails.travelDetails.endDate) errors.endDate = \"Can't be empty\";\n        // if(!employeeDetails.travelDetails.daysCount) errors.daysCount = \"Can't be empty\";\n\n        //Travel History\n        // if(!employeeDetails.travelHistory.arrivalDate)\n            // errors.arrivalDate = \"Can't be empty\";\n        // else\n            // delete errors.arrivalDate ;\n\n        // if(!employeeDetails.travelHistory.departureDate)\n            // errors.departureDate = \"Can't be empty\";\n        // else\n            // delete errors.departureDate ;\n\n        // if(!employeeDetails.travelHistory.daysSpent)\n            // errors.daysSpent = \"Can't be empty\";\n        // else\n            // delete errors.daysSpent ;\n\n        //Checklist H4\n        if(!employeeDetails.H4CheckListDetails.H4Passport) errors.H4Passport = \"Can't be empty\";\n        if(!employeeDetails.H4CheckListDetails.H4i94) errors.H4i94 = \"Can't be empty\";\n        if(!employeeDetails.H4CheckListDetails.H4Approval) errors.H4Approval = \"Can't be empty\";\n        if(!employeeDetails.H4CheckListDetails.H4Marraige) errors.H4Marraige = \"Can't be empty\";\n        if(!employeeDetails.H4CheckListDetails.H4ChildrenCertificate) errors.H4ChildrenCertificate = \"Enter Zipcode\";\n\n        //Work Details\n        // if(!employeeDetails.workDetails.className)\n        //     errors.className = \"Can't be empty\";\n        // else\n        //     delete errors.className ;\n\n        if(!employeeDetails.workDetails.clientAddress)\n            errors.clientAddress = \"Can't be empty\";\n        else\n            delete errors.clientAddress ;\n\n        // if(!employeeDetails.workDetails.clientAddress2)\n        //     errors.clientAddress2 = \"Can't be empty\";\n        // else\n        //     delete errors.clientAddress2 ;\n\n        if(!employeeDetails.workDetails.clientCity)\n            errors.clientCity = \"Can't be empty\";\n        else\n            delete errors.clientCity ;\n\n        if(!employeeDetails.workDetails.clientState)\n            errors.clientState = \"Can't be empty\";\n        else\n            delete errors.clientState ;\n\n        if(employeeDetails.workDetails.clientZipCode.length === 5)\n            errors.clientZipCode = \"Can't be empty\";\n        else\n            delete errors.clientZipCode ;\n\n        if(!employeeDetails.workDetails.vendorName)\n            errors.vendorName = \"Can't be empty\";\n        else\n            delete errors.vendorName ;\n\n        if(!Validator.isEmail(employeeDetails.workDetails.vendorEmail))\n            errors.vendorEmail = \"Can't be empty\";\n        else\n            delete errors.vendorEmail;\n\n        // if(!employeeDetails.workDetails.contactNumber.length === 10 || !Validator.isNumeric(employeeDetails.workDetails.contactNumber))\n            // errors.contactInformation = \"Can't be empty\";\n        // else\n            // delete errors.contactInformation ;\n\n        if(!employeeDetails.workDetails.projectStartDate)\n            errors.projectStartDate = \"Can't be empty\";\n        else\n            delete errors.projectStartDate ;\n\n        // if(!employeeDetails.workDetails.vendorInfo) errors.vendorInfo = \"Can't be empty\";\n\n        //I-140 Details\n        if(!employeeDetails.I140Detials.I140Approval) errors.I140Approval = \"Can't be empty\";\n        if(!employeeDetails.I140Detials.I140Date) errors.I140Date = \"Can't be empty\";\n        if(!employeeDetails.I140Detials.I140ReceiptDate) errors.I140ReceiptDate = \"Can't be empty\";\n\n        //Spouse Details\n        if(!employeeDetails.spouseDetails.maritalStatus) errors.maritalStatus = \"Can't be empty\";\n        if(!employeeDetails.spouseDetails.spouseH4) errors.spouseH4 = \"Can't be empty\";\n        if(!employeeDetails.spouseDetails.dependenceRelationship) errors.dependenceRelationship = \"Can't be empty\";\n\n        //H4 Details\n        if(!employeeDetails.H4Details.spouseFirstName) errors.spouseFirstName = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseLastName) errors.spouseLastName = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseBirthDate) errors.spouseBirthDate = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseCountry) errors.spouseCountry = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseCountryOfCitizen) errors.spouseCountryOfCitizen = \"Can't be empty\";\n        if(!employeeDetails.H4Details.marraigeDate) errors.marraigeDate = \"Can't be empty\";\n        if(!employeeDetails.H4Details.countryOfMarraige) errors.countryOfMarraige = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseImmigrationStatus) errors.spouseImmigrationStatus = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseSocialSecurityNumber) errors.spouseSocialSecurityNumber = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseCurrentAddress1) errors.spouseCurrentAddress1 = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseCurrentAddress2) errors.spouseCurrentAddress2 = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseCity) errors.spouseCity = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseState) errors.spouseState = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseZipcode) errors.spouseZipcode = \"Can't be empty\";\n        if(!employeeDetails.H4Details.spouseComment) errors.spouseComment = \"Can't be empty\";\n\n        //Kids Details\n        // if(!employeeDetails.kidsDetails.dependenceRelationship2) errors.dependenceRelationship2 = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidFullName) errors.kidFullName = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidGender) errors.kidGender = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidMaritalStatus) errors.kidMaritalStatus = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidBirthDate) errors.kidBirthDate = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidCountry) errors.kidCountry = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidCountryOfCitizen) errors.kidCountryOfCitizen = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidImmigrationStatus) errors.kidImmigrationStatus = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidSocialSecurityNumber || !Validator.isNumeric(employeeDetails.kidsDetails.kidSocialSecurityNumber)) errors.kidSocialSecurityNumber = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidCurrentAddress) errors.kidCurrentAddress = \"Can't be empty\";\n        // if(!employeeDetails.kidsDetails.kidComment) errors.kidComment = \"Can't be empty\";\n\n\t\tif(employeeDetails.kidsDetails.length > 0) {\n\t\t\tfor(let i = 0; i < employeeDetails.kidsDetails.length; i++) {\n\t\t\t\tif(!employeeDetails.kidsDetails[i].dependenceRelationship2) errors.dependenceRelationship2 = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidFullName) errors.kidFullName = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidGender) errors.kidGender = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidMaritalStatus) errors.kidMaritalStatus = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidBirthDate) errors.kidBirthDate = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidCountry) errors.kidCountry = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidCountryOfCitizen) errors.kidCountryOfCitizen = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidImmigrationStatus) errors.kidImmigrationStatus = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidSocialSecurityNumber) errors.kidSocialSecurityNumber = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidCurrentAddress) errors.kidCurrentAddress = \"Can't be empty\";\n\t\t\t\tif(!employeeDetails.kidsDetails[i].kidComment) errors.kidComment = \"Can't be empty\";\n\t\t\t}\n\t\t}\n\n\t\tif(employeeDetails.travelHistory.length > 0) {\n\t\t\tfor(let i = 0; i < employeeDetails.travelHistory.length; i++) {\n\t\t\t\tif(!employeeDetails.travelHistory[i].daysSpent) errors.daysSpent = \"Can't be empty\";\n\t\t\t}\n\t\t}\n\n        //Errors\n        return errors;\n    };\n\n    //------------------------------------------------------------------------------------------------------------\n    // Functions for h4 questions\n\n    onH4Select = (e) => {\n        // console.log('H4 Checked', e.target.value);\n        this.setState({\n            isH4DependentAvailable: e.target.value\n        });\n    }\n\n    onMarraige = (e) => {\n        // console.log('Married Checked', e.target.value);\n        this.setState({\n            isMarried: e.target.value\n        });\n    }\n\n    onH4requiredForSpouse = (e) => {\n        // console.log('H4 Required Checked', e.target.value);\n        this.setState({\n            isH4ReuiredForSpouse: e.target.value\n        });\n    }\n\n    onH4ForKids = (e) => {\n        // console.log('H4 required for kids', e.target.value);\n        this.setState({\n            haveKids: e.target.value\n        })\n    }\n\n    //--------------------------------------------------------------------------------------------------------\n    // Main Render\n\n    render() {\n        const { employeeDetails, reliableDocuments, errors } = this.state;\n        const { kidsDetails, travelHistory } = this.state.employeeDetails;\n        const isAdmin = this.props.isAdmin;\n        const employeeData = this.props.employeeData;\n        const isDisabledTrue = this.state.shouldDisable;\n        const isH4DependentAvailable = this.state.isH4DependentAvailable;\n        const isMarried = this.state.isMarried;\n        const isH4ReuiredForSpouse = this.state.isH4ReuiredForSpouse;\n        const haveKids = this.state.haveKids;\n        let downloadButton;\n        let submitButton;\n\t\t    let saveButton;\n        let employeeListPageLink;\n        let adminPageLink;\n        let renderH4Dependent;\n        // let renderSpouse;\n        let renderChecklist;\n        let renderSpouseH4;\n        let renderH4DependentQuestion;\n        let renderSpouseH4Question;\n        let renderKidsH4Question;\n        let renderSSNCopyForSpouse;\n\n        let isSpouseCountryOther = this.state.employeeDetails.H4Details.spouseCountry;\n        let renderSpouseCountryOther;\n\n        if(isSpouseCountryOther === 'Other') {\n            renderSpouseCountryOther = <Input id=\"spouseCountry\" type=\"text\" name=\"spouseCountry\"  value= {employeeDetails.H4Details.spouseCountry} onChange={this.onH4DetailsChange} placeholder=\"Spouse Country\" />\n        }\n\n        if(isAdmin && Object.keys(employeeData).length !== 0) {\n            downloadButton = <Form.Item>\n                <Button type=\"primary\" onClick={this.exportToPdf}>Download Form</Button>\n            </Form.Item>\n        } else {\n            submitButton = <Form.Item>\n                <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n            </Form.Item>\n      \t\t\tsaveButton = <Form.Item>\n                <Button type=\"primary\" onClick={this.onSave}>Save</Button>\n            </Form.Item>\n        }\n        if(isAdmin) {\n            employeeListPageLink = <Menu.Item><Link to=\"/employeelist\">Employee List</Link></Menu.Item>\n            adminPageLink = <Menu.Item><Link to=\"/admin\">Admin Panel</Link></Menu.Item>\n        }\n        if(isMarried) {\n            renderH4DependentQuestion =\n            <Row>\n                <RadioGroup onChange={this.onH4Select} value={this.state.isH4DependentAvailable}>Are H4 dependents available ?\n                    <Radio value={true}>Yes</Radio>\n                    <Radio value={false}>No</Radio>\n                </RadioGroup>\n            </Row>\n        }\n        if(isH4DependentAvailable) {\n            renderSpouseH4Question =\n            <Row>\n                <RadioGroup onChange={this.onH4requiredForSpouse} value={this.state.isH4ReuiredForSpouse}>Is H4 required for spouse ?\n                    <Radio value={true}>Yes</Radio>\n                    <Radio value={false}>No</Radio>\n                </RadioGroup>\n            </Row>\n        }\n        if(isH4ReuiredForSpouse) {\n            renderKidsH4Question =\n            <Row>\n                <RadioGroup onChange={this.onH4ForKids} value={this.state.haveKids}>Do you have Kids ?\n                    <Radio value={true}>Yes</Radio>\n                    <Radio value={false}>No</Radio>\n                </RadioGroup>\n            </Row>\n        }\n        if(haveKids) {\n            renderH4Dependent = <Card title=\"Kids Information\"> {\n                kidsDetails.map((val, idx)=> {\n                    let addDoc1Progress = `additionalDocument1ForKid${idx+1}Progress`\n                    let addDoc1 = `additionalDocument1ForKid${idx+1}`\n                    let addDoc1PathLower = `additionalDocument1ForKid${idx+1}PathLower`\n                    let addDoc2Progress = `additionalDocument2ForKid${idx+2}Progress`\n                    let addDoc2 = `additionalDocument2ForKid${idx+2}`\n                    let addDoc2PathLower = `additionalDocument2ForKid${idx+2}PathLower`\n                    return(\n                        <Card title={`Kid ${idx+1}`}>\n                            <div key={idx}>\n                                <Form.Item error={!!errors.kidFullName} style={{ color: 'red' }} label=\"Full Name\">\n                                    <Popover content=\"Kid Full Name\">\n                                        <Input id=\"kidFullName\" type=\"text\" name=\"kidFullName\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"kid Full Name\" />\n                                        {errors.kidFullName}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidGender} style={{ color: 'red' }} label=\"Gender\">\n                                    <Popover content=\"Kid Gender\">\n                                        <Input id=\"kidGender\" type=\"text\" name=\"kidGender\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Gender\" />\n                                        {errors.kidGender}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidBirthDate} style={{ color: 'red' }} label=\"Birth Date\">\n                                    <Popover content=\"Kid Birth Date\">\n                                        <DatePicker disabled={isDisabledTrue} onChange={this.onKidBirthDateChange} format=\"MM/DD/YYYY\" placeholder= \"Birth Date\" defaultValue= {moment()} />\n                                        {errors.kidBirthDate}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidCountry} style={{ color: 'red' }} label=\"Country\">\n                                    <Popover content=\"Kid Country\">\n                                        {/* <Input id=\"kidCountry\" type=\"text\" name=\"kidCountry\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Country\" /> */}\n                                        <Select\n                                            mode=\"kidCountry\"\n                                            id=\"kidCountry\"\n                                            name=\"kidCountry\"\n                                            style={{ width: '100px' }}\n                                            placeholder=\"Country\"\n                                            onChange={this.onKidCountryChange}\n                                            value= {employeeDetails.kidsDetails.kidCountry}\n                                        >\n                                            {\n                                                COUNTRIES_LIST.map((country) => {\n                                                    return (\n                                                        <Option key={country.name}>{country.name}</Option>\n                                                    )\n                                                })\n                                            }\n                                        </Select>\n                                        {errors.kidCountry}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidCountryOfCitizen} style={{ color: 'red' }} label=\"Country Of Citizen\">\n                                    <Popover content=\"Kid Country of Citizen\">\n                                        {/* <Input id=\"kidCountryOfCitizen\" type=\"text\" name=\"kidCountryOfCitizen\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Country Of Citizen\" /> */}\n                                        <Select\n                                            mode=\"kidCountryOfCitizen\"\n                                            id=\"kidCountryOfCitizen\"\n                                            name=\"kidCountryOfCitizen\"\n                                            style={{ width: '100px' }}\n                                            placeholder=\"Country of Citizen\"\n                                            onChange={this.onKidCountryOfCitizenChange}\n                                            value= {employeeDetails.kidsDetails.kidCountryOfCitizen}\n                                        >\n                                            {\n                                                COUNTRIES_LIST.map((country) => {\n                                                    return (\n                                                        <Option key={country.name}>{country.name}</Option>\n                                                    )\n                                                })\n                                            }\n                                        </Select>\n                                        {errors.kidCountryOfCitizen}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidImmigrationStatus} style={{ color: 'red' }} label=\"Immigration Status\">\n                                    <Popover content=\"Kid Immigration Status\">\n                                        <Input id=\"kidImmigrationStatus\" type=\"text\" name=\"kidImmigrationStatus\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Immigration Status\" />\n                                        {errors.kidImmigrationStatus}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidSocialSecurityNumber} style={{ color: 'red' }} label=\"Social Security Number\">\n                                    <Popover content=\"Kid Social Security Number\">\n                                        <Input id=\"kidSocialSecurityNumber\" type=\"text\" pattern=\"\\d*\" maxLength=\"9\" name=\"kidSocialSecurityNumber\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Social Security Number\" />\n                                        {errors.kidSocialSecurityNumber}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidCurrentAddress} style={{ color: 'red' }} label=\"Current Address\">\n                                    <Popover content=\"Kid Current Address\">\n                                        <Input id=\"kidCurrentAddress\" type=\"text\" name=\"kidCurrentAddress\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Current Address\" />\n                                        {errors.kidCurrentAddress}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.kidComment} style={{ color: 'red' }} label=\"Kid Comment\">\n                                    <Popover content=\"Kid Comment\">\n                                        <TextArea id=\"kidComment\" type=\"text\" name=\"kidComment\" onChange={this.onKidsDetailsChange(idx)} placeholder=\"Kid Comment\" />\n                                        {errors.kidComment}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                </Form.Item>\n                                <Form.Item error={!!errors.ssnCopyForKids} style={{ color: 'red' }} label=\"SSN for kids\">\n                                    <Popover content=\"SSN copy\">\n                                        <Input id=\"ssnCopyForKids\" type=\"file\" name=\"ssnCopyForKids\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"SSN for kids\" />\n                                        {errors.ssnCopyForKids}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                    <progress value={this.state.ssnCopyForKidsProgress} max=\"100\"/>\n                                    <span>\n                                        { this.state.employeeDetails.ssnCopyForKidsPathLower && this.state.employeeDetails.ssnCopyForKidsPathLower !== '' ?\n                                            (\n                                            <span>\n                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                    <span>Upload new Document</span>\n                                                </Popover>\n                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.ssnCopyForKids, this.state.employeeDetails.ssnCopyForKidsPathLower) } }>\n                                                    Download Recent document\n                                                </a>\n                                            </span>\n                                            )\n                                            : (<span></span>)\n                                        }\n                                    </span>\n                                </Form.Item>\n                                <Form.Item error={!!errors[addDoc1]} style={{ color: 'red' }} label=\"Additional Document 1\">\n                                    <Popover content=\"Additional Document 1\">\n                                        <Input id={addDoc1} type=\"file\" name={addDoc1} onChange={(e) => this.uploadFile(e, \"Kids\")} placeholder=\"Additional Document 1\" />\n                                        {errors[addDoc1]}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                    <progress value={this.state[addDoc1Progress]} max=\"100\"/>\n                                    <span>\n                                        { this.state.employeeDetails[addDoc1PathLower] && this.state.employeeDetails[addDoc1PathLower] !== '' ?\n                                            (\n                                            <span>\n                                                <span>Upload new Document</span>\n                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails[addDoc1], this.state.employeeDetails[addDoc1PathLower]) } }>\n                                                    Download Recent document\n                                                </a>\n                                            </span>\n                                            )\n                                            : (<span></span>)\n                                        }\n                                    </span>\n                                </Form.Item>\n                                <Form.Item error={!!errors[addDoc2]} style={{ color: 'red' }} label=\"Additional Document 2\">\n                                    <Popover content=\"Additional Document 2\">\n                                        <Input id={addDoc2} type=\"file\" name={addDoc2} onChange={(e) => this.uploadFile(e, \"Kids\")} placeholder=\"Additional Document 2\" />\n                                        {errors[addDoc2]}\n                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                    </Popover>\n                                    <progress value={this.state[addDoc2Progress]} max=\"100\"/>\n                                    <span>\n                                        { this.state.employeeDetails[addDoc2PathLower] && this.state.employeeDetails[addDoc2PathLower] !== '' ?\n                                            (\n                                            <span>\n                                                <span>Upload new Document</span>\n                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails[addDoc2], this.state.employeeDetails[addDoc2PathLower]) } }>\n                                                    Download Recent document\n                                                </a>\n                                            </span>\n                                            )\n                                            : (<span></span>)\n                                        }\n                                    </span>\n                                </Form.Item>\n                            </div>\n                        </Card>\n                    )\n                })\n            }\n            <button onClick={this.addKidsDetails}>Add Kids</button></Card>\n        }\n\n        if(haveKids) {\n            renderChecklist = <Card title=\"Check List Information for H4B\">\n            <Form.Item error={!!errors.H4Passport} style={{ color: 'red' }} label=\"H4 Passport\">\n                <Popover content=\"H4 Passport\">\n                    <Input id=\"H4Passport\" type=\"file\" name=\"H4Passport\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"H4 Passport\" />\n                    {errors.H4Passport}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n                <progress value={this.state.H4PassportProgress} max=\"100\"/>\n                <span>\n                    { this.state.employeeDetails.H4PassportPathLower && this.state.employeeDetails.H4PassportPathLower !== '' ?\n                        (\n                        <span>\n                            <span>Upload new Document</span>\n                            <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.H4Passport, this.state.employeeDetails.H4PassportPathLower) } }>\n                                Download Recent document\n                            </a>\n                        </span>\n                        )\n                        : (<span></span>)\n                    }\n                </span>\n            </Form.Item>\n            <Form.Item error={!!errors.H4i94} style={{ color: 'red' }} label=\"H4 i94\">\n                <Popover content=\"H4 I-94\">\n                    <Input id=\"H4i94\" type=\"file\" name=\"H4i94\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"H4 i94\" />\n                    {errors.H4i94}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n                <progress value={this.state.H4i94Progress} max=\"100\"/>\n                <span>\n                    { this.state.employeeDetails.H4i94PathLower && this.state.employeeDetails.H4i94PathLower !== '' ?\n                        (\n                        <span>\n                            <span>Upload new Document</span>\n                            <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.H4i94, this.state.employeeDetails.H4i94PathLower) } }>\n                                Download Recent document\n                            </a>\n                        </span>\n                        )\n                        : (<span></span>)\n                    }\n                </span>\n            </Form.Item>\n            <Form.Item error={!!errors.H4Approval} style={{ color: 'red' }} label=\"H4 Approval\">\n                <Popover content=\"H4 Approval\">\n                    <Input id=\"H4Approval\" type=\"text\" name=\"H4Approval\"  value= {employeeDetails.H4CheckListDetails.H4Approval} onChange={this.onH4CheckListDetailsChange} placeholder=\"H4 Approval\" />\n                    {errors.H4Approval}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n            </Form.Item>\n            <Form.Item error={!!errors.H4Marraige} style={{ color: 'red' }} label=\"H4 Marraige\">\n                <Popover content=\"H4 Marraige\">\n                    <Input id=\"H4Marraige\" type=\"file\" name=\"H4Marraige\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"H4 Marraige\" />\n                    {errors.H4Marraige}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n                <progress value={this.state.H4MarraigeProgress} max=\"100\"/>\n                <span>\n                    { this.state.employeeDetails.H4MarraigePathLower && this.state.employeeDetails.H4MarraigePathLower !== '' ?\n                        (\n                        <span>\n                            <span>Upload new Document</span>\n                            <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.H4Marraige, this.state.employeeDetails.H4MarraigePathLower) } }>\n                                Download Recent document\n                            </a>\n                        </span>\n                        )\n                        : (<span></span>)\n                    }\n                </span>\n            </Form.Item>\n            <Form.Item error={!!errors.H4ChildrenCertificate} style={{ color: 'red' }} label=\"H4 Children Certificate\">\n                <Popover content=\"H4 Children certificate\">\n                    <Input id=\"H4ChildrenCertificate\" type=\"file\" name=\"H4ChildrenCertificate\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"H4 Children Certificate\" />\n                    {errors.H4ChildrenCertificate}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n                <progress value={this.state.H4ChildrenCertificateProgress} max=\"100\"/>\n                <span>\n                    { this.state.employeeDetails.H4ChildrenCertificatePathLower && this.state.employeeDetails.H4ChildrenCertificatePathLower !== '' ?\n                        (\n                        <span>\n                            <span>Upload new Document</span>\n                            <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.H4ChildrenCertificate, this.state.employeeDetails.H4ChildrenCertificatePathLower) } }>\n                                Download Recent document\n                            </a>\n                        </span>\n                        )\n                        : (<span></span>)\n                    }\n                </span>\n            </Form.Item>\n        </Card>\n        }\n\n        if(isH4ReuiredForSpouse) {\n            renderSpouseH4 =\n            <Card title=\"H4 Information\">\n                <Form.Item error={!!errors.spouseFirstName} style={{ color: 'red' }} label=\"Spouse First Name\">\n                    <Popover content=\"Spouse Firt Name\">\n                        <Input id=\"spouseFirstName\" type=\"text\" name=\"spouseFirstName\"  value= {employeeDetails.H4Details.spouseFirstName} onChange={this.onH4DetailsChange} placeholder=\"Spouse First Name\" />\n                        {errors.spouseFirstName}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseLastName} style={{ color: 'red' }} label=\"Spouse Last Name\">\n                    <Popover content=\"Spouse Last Name\">\n                        <Input id=\"spouseLastName\" type=\"text\" name=\"spouseLastName\" value= {employeeDetails.H4Details.spouseLastName} onChange={this.onH4DetailsChange} placeholder=\"Spouse Last Name\" />\n                        {errors.spouseLastName}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseBirthDate} style={{ color: 'red' }} label=\"Spouse Birth Date\">\n                    <Popover content=\"Spouse Birth Date\">\n                        <DatePicker disabled={isDisabledTrue} onChange={this.onSpouseBirthDateChange} format=\"MM/DD/YYYY\" placeholder= \"Birth Date\" defaultValue= {moment()} />\n                        {errors.spouseBirthDate}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseCountry} style={{ color: 'red' }} label=\"Spouse Country\">\n                    <Popover content=\"Spouse Country\">\n                        {/* <Input id=\"spouseCountry\" type=\"text\" name=\"spouseCountry\"  value= {employeeDetails.H4Details.spouseCountry} onChange={this.onH4DetailsChange} placeholder=\"Spouse Country\" /> */}\n                        <Select\n                            mode=\"spouseCountry\"\n                            id=\"spouseCountry\"\n                            name=\"spouseCountry\"\n                            style={{ width: '100px' }}\n                            placeholder=\"Spouse Country\"\n                            onChange={this.onSpouseCountryChange}\n                            value= {employeeDetails.H4Details.spouseCountry}\n                        >\n                            {\n                                COUNTRIES_LIST.map((country) => {\n                                    return (\n                                        <Option key={country.name}>{country.name}</Option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        {renderSpouseCountryOther}\n                        {errors.spouseCountry}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseCountryOfCitizen} style={{ color: 'red' }} label=\"Spouse Country Of Citizen\">\n                    <Popover content=\"Spouse country of citizenship\">\n                        {/* <Input id=\"spouseCountryOfCitizen\" type=\"text\" name=\"spouseCountryOfCitizen\"  value= {employeeDetails.H4Details.spouseCountryOfCitizen} onChange={this.onH4DetailsChange} placeholder=\"Spouse Country Of Citizen\" /> */}\n                        <Select\n                            mode=\"spouseCountryOfCitizen\"\n                            id=\"spouseCountryOfCitizen\"\n                            name=\"spouseCountryOfCitizen\"\n                            style={{ width: '100px' }}\n                            placeholder=\"Spouse Country Of Citizen\"\n                            onChange={this.onSpouseCountryOfCitizenChange}\n                            value= {employeeDetails.H4Details.spouseCountryOfCitizen}\n                        >\n                            {\n                                COUNTRIES_LIST.map((country) => {\n                                    return (\n                                        <Option key={country.name}>{country.name}</Option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        {errors.spouseCountryOfCitizen}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.marraigeDate} style={{ color: 'red' }} label=\"Marraige Date\">\n                    <Popover content=\"Marraige date\">\n                        <DatePicker disabled={isDisabledTrue} onChange={this.onMarraigeDateChange} format=\"MM/DD/YYYY\" placeholder= \"Marraige Date\" defaultValue= {moment()} />\n                        {errors.marraigeDate}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.countryOfMarraige} style={{ color: 'red' }} label=\"Country Of Marraige\">\n                    <Popover content=\"Country of marraige\">\n                        {/* <Input id=\"countryOfMarraige\" type=\"text\" name=\"countryOfMarraige\"  value= {employeeDetails.H4Details.countryOfMarraige} onChange={this.onH4DetailsChange} placeholder=\"Country Of Marraige\" /> */}\n                        <Select\n                            mode=\"countryOfMarraige\"\n                            id=\"countryOfMarraige\"\n                            name=\"countryOfMarraige\"\n                            style={{ width: '100px' }}\n                            placeholder=\"Country of Marraige\"\n                            onChange={this.onSpouseCountryOfMarraigeChange}\n                            value= {employeeDetails.H4Details.countryOfMarraige}\n                        >\n                            {\n                                COUNTRIES_LIST.map((country) => {\n                                    return (\n                                        <Option key={country.name}>{country.name}</Option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        {errors.countryOfMarraige}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseImmigrationStatus} style={{ color: 'red' }} label=\"Spouse Immigration Status\">\n                    <Popover content=\"Spouse immigration status\">\n                        <Input id=\"spouseImmigrationStatus\" type=\"text\" name=\"spouseImmigrationStatus\"  value= {employeeDetails.H4Details.spouseImmigrationStatus} onChange={this.onH4DetailsChange} placeholder=\"Spouse Immigration Status\" />\n                        {errors.spouseImmigrationStatus}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseSocialSecurityNumber} style={{ color: 'red' }} label=\"Spouse Soical Security Number\">\n                    <Popover content=\"Spouse social security number\">\n                        <Input id=\"spouseSocialSecurityNumber\" type=\"text\" pattern=\"\\d*\" maxLength=\"9\" name=\"spouseSocialSecurityNumber\"  value= {employeeDetails.H4Details.spouseSocialSecurityNumber} onChange={this.onH4DetailsChange} placeholder=\"Spouse Soical Security Number\" />\n                        {errors.spouseSocialSecurityNumber}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.dependenceRelationship} style={{ color: 'red' }} label=\"Dependence Relationship\">\n                    <Popover content=\"Dependency relationship\">\n                        {/* <Input id=\"dependenceRelationship\" type=\"text\" name=\"dependenceRelationship\"  value= {employeeDetails.H4Details.dependenceRelationship} onChange={this.onH4DetailsChange} placeholder=\"Dependence Relationship\" /> */}\n                        <Select\n                            mode=\"dependenceRelationship\"\n                            id=\"dependenceRelationship\"\n                            name=\"dependenceRelationship\"\n                            style={{ width: '100px' }}\n                            placeholder=\"Dependence Relationship\"\n                            onChange={this.onDependencyRelationChange}\n                            value= {employeeDetails.H4Details.dependenceRelationship}\n                        >\n                            <Option key=\"wife\">Wife</Option>\n                            <Option key=\"husband\">Husband</Option>\n                        </Select>\n                        {errors.dependenceRelationship}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseCurrentAddress1} style={{ color: 'red' }} label=\"Spouse Current Address 1\">\n                    <Popover content=\"Spouse current address 1\">\n                        <Input id=\"spouseCurrentAddress1\" type=\"text\" name=\"spouseCurrentAddress1\"  value= {employeeDetails.H4Details.spouseCurrentAddress1} onChange={this.onH4DetailsChange} placeholder=\"Spouse Current Address 1\" />\n                        {errors.spouseCurrentAddress1}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseCurrentAddress2} style={{ color: 'red' }} label=\"Spouse Current Address 2\">\n                    <Popover content=\"Spouse current address 2\">\n                        <Input id=\"spouseCurrentAddress2\" type=\"text\" name=\"spouseCurrentAddress2\"  value= {employeeDetails.H4Details.spouseCurrentAddress2} onChange={this.onH4DetailsChange} placeholder=\"Spouse Current Address 2\" />\n                        {errors.spouseCurrentAddress2}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseCity} style={{ color: 'red' }} label=\"Spouse City\">\n                    <Popover content=\"Spouse city\">\n                        <Input id=\"spouseCity\" type=\"text\" name=\"spouseCity\"  value= {employeeDetails.H4Details.spouseCity} onChange={this.onH4DetailsChange} placeholder=\"Spouse City\" />\n                        {errors.spouseCity}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseState} style={{ color: 'red' }} label=\"Spouse State\">\n                    <Popover content=\"Spouse state\">\n                        {/* <Input id=\"spouseState\" type=\"text\" name=\"spouseState\"  value= {employeeDetails.H4Details.spouseState} onChange={this.onH4DetailsChange} placeholder=\"Spouse State\" /> */}\n                        <Select\n                            mode=\"state\"\n                            disabled={isDisabledTrue}\n                            id=\"clientState\"\n                            name=\"clientState\"\n                            style={{ width: '100px' }}\n                            placeholder=\"States\"\n                            onChange={this.onSpouseStateSelect}\n                            value= {employeeDetails.H4Details.spouseState}\n                        >\n                            {\n                                STATES_LIST.map((state) => {\n                                    return (\n                                        <Option key={state.name}>{state.name}</Option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        {errors.spouseState}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseZipcode} style={{ color: 'red' }} label=\"Spouse Zipcode\">\n                    <Popover content=\"Spouse zipcode\">\n                        <Input id=\"spouseZipcode\" type=\"number\" name=\"spouseZipcode\"  value= {employeeDetails.H4Details.spouseZipcode} onChange={this.onH4DetailsChange} placeholder=\"Spouse Zipcode\" />\n                        {errors.spouseZipcode}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.spouseComment} style={{ color: 'red' }} label=\"Spouse Comment\">\n                    <Popover content=\"Spouse Comment\">\n                        <TextArea id=\"spouseComment\" type=\"text\" name=\"spouseComment\"  value= {employeeDetails.H4Details.spouseComment} onChange={this.onH4DetailsChange} placeholder=\"Spouse Comment\" />\n                        {errors.spouseComment}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                </Form.Item>\n                <Form.Item error={!!errors.additionalDocument1ForSpouse} style={{ color: 'red' }} label=\"Additional Document 1\">\n                    <Popover content=\"Additional Document 1\">\n                        <Input id=\"additionalDocument1ForSpouse\" type=\"file\" name=\"additionalDocument1ForSpouse\" onChange={(e) => this.uploadFile(e, \"Spouse\")} placeholder=\"Additional Document 1\" />\n                        {errors.additionalDocument1ForSpouse}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                    <progress value={this.state.additionalDocument1ForSpouseProgress} max=\"100\"/>\n                    <span>\n                        { this.state.employeeDetails.additionalDocument1ForSpousePathLower && this.state.employeeDetails.additionalDocument1ForSpousePathLower !== '' ?\n                            (\n                            <span>\n                                <span>Upload new Document</span>\n                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument1ForSpouse, this.state.employeeDetails.additionalDocument1ForSpousePathLower) } }>\n                                    Download Recent document\n                                </a>\n                            </span>\n                            )\n                            : (<span></span>)\n                        }\n                    </span>\n                </Form.Item>\n                <Form.Item error={!!errors.additionalDocument2ForSpouse} style={{ color: 'red' }} label=\"Additional Document 2\">\n                    <Popover content=\"Additional Document 2\">\n                        <Input id=\"additionalDocument2ForSpouse\" type=\"file\" name=\"additionalDocument2ForSpouse\" onChange={(e) => this.uploadFile(e, \"Spouse\")} placeholder=\"Additional Document 2\" />\n                        {errors.additionalDocument2ForSpouse}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                    <progress value={this.state.additionalDocument2ForSpouseProgress} max=\"100\"/>\n                    <span>\n                        { this.state.employeeDetails.additionalDocument2ForSpousePathLower && this.state.employeeDetails.additionalDocument2ForSpousePathLower !== '' ?\n                            (\n                            <span>\n                                <span>Upload new Document</span>\n                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument2ForSpouse, this.state.employeeDetails.additionalDocument2ForSpousePathLower) } }>\n                                    Download Recent document\n                                </a>\n                            </span>\n                            )\n                            : (<span></span>)\n                        }\n                    </span>\n                </Form.Item>\n                <Form.Item error={!!errors.additionalDocument3ForSpouse} style={{ color: 'red' }} label=\"Additional Document 3\">\n                    <Popover content=\"Additional Document 3\">\n                        <Input id=\"additionalDocument3ForSpouse\" type=\"file\" name=\"additionalDocument3ForSpouse\" onChange={(e) => this.uploadFile(e, \"Spouse\")} placeholder=\"Additional Document 3\" />\n                        {errors.additionalDocument3ForSpouse}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                    <progress value={this.state.additionalDocument3ForSpouseProgress} max=\"100\"/>\n                    <span>\n                        { this.state.employeeDetails.additionalDocument3ForSpousePathLower && this.state.employeeDetails.additionalDocument3ForSpousePathLower !== '' ?\n                            (\n                            <span>\n                                <span>Upload new Document</span>\n                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument3ForSpouse, this.state.employeeDetails.additionalDocument3ForSpousePathLower) } }>\n                                    Download Recent document\n                                </a>\n                            </span>\n                            )\n                            : (<span></span>)\n                        }\n                    </span>\n                </Form.Item>\n                <Form.Item error={!!errors.additionalDocument4ForSpouse} style={{ color: 'red' }} label=\"Additional Document 4\">\n                    <Popover content=\"Additional Document 4\">\n                        <Input id=\"additionalDocument4ForSpouse\" type=\"file\" name=\"additionalDocument4ForSpouse\" onChange={(e) => this.uploadFile(e, \"Spouse\")} placeholder=\"Additional Document 4\" />\n                        {errors.additionalDocument4ForSpouse}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                    <progress value={this.state.additionalDocument4ForSpouseProgress} max=\"100\"/>\n                    <span>\n                        { this.state.employeeDetails.additionalDocument4ForSpousePathLower && this.state.employeeDetails.additionalDocument4ForSpousePathLower !== '' ?\n                            (\n                            <span>\n                                <span>Upload new Document</span>\n                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument4ForSpouse, this.state.employeeDetails.additionalDocument4ForSpousePathLower) } }>\n                                    Download Recent document\n                                </a>\n                            </span>\n                            )\n                            : (<span></span>)\n                        }\n                    </span>\n                </Form.Item>\n                <Form.Item error={!!errors.additionalDocument5ForSpouse} style={{ color: 'red' }} label=\"Additional Document 5\">\n                    <Popover content=\"Additional Document 5\">\n                        <Input id=\"additionalDocument5ForSpouse\" type=\"file\" name=\"additionalDocument5ForSpouse\" onChange={(e) => this.uploadFile(e, \"Spouse\")} placeholder=\"Additional Document 5\" />\n                        {errors.additionalDocument5ForSpouse}\n                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                    </Popover>\n                    <progress value={this.state.additionalDocument5ForSpouseProgress} max=\"100\"/>\n                    <span>\n                        { this.state.employeeDetails.additionalDocument5ForSpousePathLower && this.state.employeeDetails.additionalDocument5ForSpousePathLower !== '' ?\n                            (\n                            <span>\n                                <span>Upload new Document</span>\n                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument5ForSpouse, this.state.employeeDetails.additionalDocument5ForSpousePathLower) } }>\n                                    Download Recent document\n                                </a>\n                            </span>\n                            )\n                            : (<span></span>)\n                        }\n                    </span>\n                </Form.Item>\n            </Card>\n        }\n\n        if(isH4ReuiredForSpouse) {\n            renderSSNCopyForSpouse = <Form.Item error={!!errors.ssnCopyForSpouse} style={{ color: 'red' }} label=\"SSN for Spouse\">\n                <Popover content=\"SSN copy\">\n                    <Input id=\"ssnCopyForSpouse\" type=\"file\" name=\"ssnCopyForSpouse\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"SSN for Spouse\" />\n                    {errors.ssnCopyForSpouse}\n                    <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                </Popover>\n                <progress value={this.state.ssnCopyForSpouseProgress} max=\"100\"/>\n                <span>\n                    { this.state.employeeDetails.ssnCopyForSpousePathLower && this.state.employeeDetails.ssnCopyForSpousePathLower !== '' ?\n                        (\n                        <span>\n                            <Popover content=\"Uploading new document will discard existing document\">\n                                <span>Upload new Document</span>\n                            </Popover>\n                            <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.ssnCopyForSpouse, this.state.employeeDetails.ssnCopyForSpousePathLower) } }>\n                                Download Recent document\n                            </a>\n                        </span>\n                        )\n                        : (<span></span>)\n                    }\n                </span>\n            </Form.Item>\n        }\n\n        return (\n            <div id=\"mainDiv\">\n                <Layout>\n                    <Header className=\"card\" style={{ background: '#fff', padding: 0 }} >\n                        <Row>\n                            <Col span={4} style={{ alignContent: 'left', paddingLeft: 20 }}>\n                                <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                            </Col>\n                            <Col span={12} style={{ fontWeight: 'bold', color: '#0066c', textAlign: 'center', paddingLeft: 65 }}>\n                                <h1 style={{ fontWeight: 'bold', color: '#0066c' }}><Link style={{ float: 'right'}} to=\"/h1bform\">Reliable Immigration Form</Link></h1>\n                            </Col>\n                            <Col span={8} style={{ float: 'right' }}>\n                                <Menu style={{ float: 'right'}}>\n                                    <Menu.SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"down-circle\" />Menu</span>}>\n                                        {employeeListPageLink}\n                                        <Menu.Divider />\n                                        {adminPageLink}\n                                        <Menu.Divider />\n                                        <Menu.Item><Link to=\"/logout\">Logout</Link></Menu.Item>\n                                    </Menu.SubMenu>\n                                </Menu>\n                            </Col>\n                        </Row>\n                    </Header>\n                    <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n                    <Collapse accordion>\n                        <Form>\n                            <Row style={{ alignContent: 'center' }}>\n                                {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                    <Card title=\"Application Information\">\n                                        <Form.Item error={!!errors.typeOfApplication} style={{ color: 'red' }} label=\"Type of Application\" className= \"typeOfApplication\">\n                                            {/* <Input id=\"typeOfApplication\" type=\"text\" name=\"typeOfApplication\" value= {employeeDetails.typeOfApplication} onChange={this.onChange} placeholder=\"Type of Application\" /> */}\n                                            {/* <RadioGroup name=\"typeOfApplication\" options={typeOfApplicationMenu} value= {employeeDetails.typeOfApplication} onChange={this.onChange} /> */}\n                                            <RadioGroup name=\"typeOfApplication\" defaultValue={'CAP H1B'} value= {employeeDetails.typeOfApplication} onChange={this.onChange} >\n                                                <Radio value={'CAP H1B'}>CAP H1B</Radio>\n                                                <Radio value={'H1B Extension'}>H1B Extension</Radio>\n                                                <Radio value={'H1B RFE'}>H1B RFE</Radio>\n                                            </RadioGroup>\n                                                {errors.typeOfApplication}\n                                        </Form.Item>\n                                    </Card>\n                                {/* </Col> */}\n                                </Row>\n                            </Form>\n                        <Panel className=\"boldClass\"  header=\"Personal Information\" key=\"1\">\n                            {/* Employee Registration */}\n                                <Form id=\"personalInformationForm\" layout=\"inline\">\n                                    <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Applicant Information\">\n                                                <Form.Item error={!!errors.firstName} style={{ color: 'red' }} label=\"First Name\">\n                                                    <Popover content=\"Enter first name\">\n                                                        <Input disabled={isDisabledTrue} id=\"firstName\" type=\"text\" name=\"firstName\" value= {employeeDetails.firstName} onChange={this.onChange} placeholder=\"First Name\" />\n                                                            {errors.firstName}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.middleName} style={{ color: 'red' }} label=\"Middle Name\">\n                                                    <Popover content=\"Enter middle name\">\n                                                        <Input disabled={isDisabledTrue} id=\"middleName\" type=\"text\" name=\"middleName\" value= {employeeDetails.middleName} onChange={this.onChange} placeholder=\"Middle Name\" />\n                                                        {/* {errors.middleName} */}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.lastName} style={{ color: 'red' }} label=\"Last Name\">\n                                                    <Popover content=\"Enter last name\">\n                                                        <Input disabled={isDisabledTrue} id=\"lastName\" type=\"text\" name=\"lastName\" value= {employeeDetails.lastName} onChange={this.onChange} placeholder=\"Last Name\" />\n                                                        {errors.lastName}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.comment} style={{ color: 'red' }} label=\"Comment\">\n                                                    <Popover content=\"Comment\">\n                                                        <TextArea id=\"comment\" type=\"text\" name=\"comment\"  value= {employeeDetails.comment} onChange={this.onChange} placeholder=\"Comment\" />\n                                                        {errors.comment}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                        </Row>\n                                        <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Contact Information\">\n                                                <Form.Item error={!!errors.homeNumber} style={{ color: 'red' }} label=\"Home Number(Optional)\">\n                                                    <Popover content=\"Home Number\">\n                                                        <Input disabled={isDisabledTrue} id=\"homeNumber\" type=\"number\" max={10} name=\"homeNumber\" value= {employeeDetails.contactDetails.homeNumber} onChange={this.onContactChange} placeholder=\"(000) 000-0000\" />\n                                                            {errors.homeNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.workNumber} style={{ color: 'red' }} label=\"Work Number\">\n                                                    <Popover content=\"Work number\">\n                                                        <Input disabled={isDisabledTrue} id=\"workNumber\" type=\"number\" max={10} name=\"workNumber\" value= {employeeDetails.contactDetails.workNumber} onChange={this.onContactChange} placeholder=\"(000) 000-0000\" />\n                                                        {/* {errors.workNumber} */}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.mobileNumber} style={{ color: 'red' }} label=\"Mobile Number\">\n                                                    <Popover content=\"Mobile number\">\n                                                        <Input disabled={isDisabledTrue} id=\"mobileNumber\" type=\"number\" max={10} name=\"mobileNumber\" value= {employeeDetails.contactDetails.mobileNumber} onChange={this.onContactChange} placeholder=\"(000) 000-0000\" />\n                                                        {errors.mobileNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.email} style={{ color: 'red' }} label=\"Email\">\n                                                    <Popover content=\"Email\">\n                                                        <Input disabled={isDisabledTrue} id=\"email\" type=\"email\" name=\"email\" value= {employeeDetails.contactDetails.email} onChange={this.onContactChange} placeholder=\"Email\" />\n                                                            {errors.email}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                    </Row>\n                                    <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Present Address Information(U.S)\">\n                                                <Form.Item error={!!errors.address1} style={{ color: 'red' }} label=\"Present Address 1\">\n                                                    <Popover content=\"Address 1\">\n                                                        <Input disabled={isDisabledTrue} id=\"address1\" type=\"text\" name=\"address1\" value= {employeeDetails.addressDetails.address1} onChange={this.onAddressChange} placeholder=\"Present Address 1\" />\n                                                            {errors.address1}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.address2} style={{ color: 'red' }} label=\"Present Address 2\">\n                                                    <Popover content=\"Address 2\">\n                                                        <Input disabled={isDisabledTrue} id=\"address2\" type=\"text\" name=\"address2\" value= {employeeDetails.addressDetails.address2} onChange={this.onAddressChange} placeholder=\"Present Address 2\" />\n                                                        {errors.address2}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.city} style={{ color: 'red' }} label=\"City\">\n                                                    <Popover content=\"City\">\n                                                        <Input disabled={isDisabledTrue} id=\"city\" type=\"text\" name=\"city\" value= {employeeDetails.addressDetails.city} onChange={this.onAddressChange} placeholder=\"City\" />\n                                                        {errors.city}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.state}  label=\"State\">\n                                                    <Popover content=\"State\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"state\" type=\"state\" name=\"state\"  value= {employeeDetails.addressDetails.state} onChange={this.onAddressChange} placeholder=\"State\" /> */}\n                                                        <Select\n                                                            mode=\"state\"\n                                                            disabled={isDisabledTrue}\n                                                            id=\"state\"\n                                                            name=\"state\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"States\"\n                                                            onChange={this.onStateSelect}\n                                                            value= {employeeDetails.addressDetails.state}\n                                                        >\n                                                            {\n                                                                STATES_LIST.map((state) => {\n                                                                    return (\n                                                                        <Option key={state.name}>{state.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.zipCode} style={{ color: 'red' }} label=\"Zip Code\">\n                                                    <Popover content=\"Zipcode\">\n                                                        <Input disabled={isDisabledTrue} id=\"zipCode\" type=\"number\" name=\"zipCode\" value={employeeDetails.addressDetails.zipCode}onChange={this.onAddressChange} placeholder= \"Enter Your Zipcode\"/>\n                                                            {errors.zipCode}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.country} style={{ color: 'red' }} label=\"Country\">\n                                                    <Popover content=\"Country\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"country\" type=\"country\" name=\"country\"  value= {employeeDetails.addressDetails.country} onChange={this.onAddressChange} placeholder=\"Country\" /> */}\n                                                        <Select\n                                                            mode=\"country\"\n                                                            id=\"country\"\n                                                            name=\"country\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"Country\"\n                                                            onChange={this.onAddressCountryChange}\n                                                            value= {employeeDetails.addressDetails.country}\n                                                        >\n                                                            {\n                                                                COUNTRIES_LIST.map((country) => {\n                                                                    return (\n                                                                        <Option key={country.name}>{country.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                            {errors.country}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                        </Row>\n                                        <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Overseas Address Information\">\n                                                <Form.Item error={!!errors.overseasAddress1} style={{ color: 'red' }} label=\"Overseas Address 1\">\n                                                    <Popover content=\"Address 1\">\n                                                        <Input disabled={isDisabledTrue} id=\"overseasAddress1\" type=\"text\" name=\"overseasAddress1\" value= {employeeDetails.overseasAddressDetails.overseasAddress1} onChange={this.onOverseasAddressChange} placeholder=\"Overseas Address 1\" />\n                                                            {errors.overseasAddress1}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.overseasAddress2} style={{ color: 'red' }} label=\"Overseas Address 2\">\n                                                    <Popover content=\"Address 2\">\n                                                        <Input disabled={isDisabledTrue} id=\"overseasAddress2\" type=\"text\" name=\"overseasAddress2\" value= {employeeDetails.overseasAddressDetails.overseasAddress2} onChange={this.onOverseasAddressChange} placeholder=\"Overseas Address 2\" />\n                                                        {errors.overseasAddress2}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.overseasCity} style={{ color: 'red' }} label=\"City\">\n                                                    <Popover content=\"City\">\n                                                        <Input disabled={isDisabledTrue} id=\"overseasCity\" type=\"text\" name=\"overseasCity\" value= {employeeDetails.overseasAddressDetails.overseasCity} onChange={this.onOverseasAddressChange} placeholder=\"City\" />\n                                                        {errors.overseasCity}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.overseasState} style={{ color: 'red' }} label=\"State\">\n                                                    <Popover content=\"State\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"overseasState\" type=\"state\" name=\"overseasState\"  value= {employeeDetails.overseasAddressDetails.overseasState} onChange={this.onOverseasAddressChange} placeholder=\"State\" /> */}\n                                                        <Select\n                                                            mode=\"overseasState\"\n                                                            disabled={isDisabledTrue}\n                                                            id=\"overseasState\"\n                                                            name=\"overseasState\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"States\"\n                                                            onChange={this.onOverseasStateSelect}\n                                                            value= {employeeDetails.overseasAddressDetails.overseasState}\n                                                        >\n                                                            {\n                                                                STATES_LIST.map((state) => {\n                                                                    return (\n                                                                        <Option key={state.name}>{state.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                            {errors.overseasState}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.overseasZipCode} style={{ color: 'red' }} label=\"Zip Code\">\n                                                    <Popover content=\"Zipcode\">\n                                                        <Input disabled={isDisabledTrue} id=\"overseasZipCode\" type=\"number\" name=\"overseasZipCode\" value={employeeDetails.overseasAddressDetails.overseasZipCode}onChange={this.onOverseasAddressChange} placeholder= \"Enter Your Zipcode\"/>\n                                                            {errors.overseasZipCode}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.overseasCountry} style={{ color: 'red' }} label=\"Country\">\n                                                    <Popover content=\"Country\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"overseasCountry\" type=\"country\" name=\"overseasCountry\"  value= {employeeDetails.overseasAddressDetails.overseasCountry} onChange={this.onOverseasAddressChange} placeholder=\"Country\" /> */}\n                                                        <Select\n                                                            mode=\"overseasCountry\"\n                                                            id=\"overseasCountry\"\n                                                            name=\"overseasCountry\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"Overseas Country\"\n                                                            onChange={this.onOverseasAddressCountryChange}\n                                                            value= {employeeDetails.overseasAddressDetails.overseasCountry}\n                                                        >\n                                                            {\n                                                                COUNTRIES_LIST.map((country) => {\n                                                                    return (\n                                                                        <Option key={country.name}>{country.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                            {errors.overseasCountry}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                    </Row>\n                                    </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"Immigration Information\" key=\"2\">\n                                    <Form layout=\"inline\">\n                                    <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Passport Information\">\n                                                <Form.Item error={!!errors.dateOfBirth} style={{ color: 'red' }} label=\"Date of Birth\">\n                                                    <Popover content=\"Date of Birth\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onBirthDateChange} format=\"MM/DD/YYYY\" placeholder= \"Birth Date\" defaultValue= {moment()} />\n                                                        {errors.dateOfBirth}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.passportNumber} style={{ color: 'red' }} label=\"Passport Number\">\n                                                    <Popover content=\"Passport number\">\n                                                        <Input disabled={isDisabledTrue} id=\"passportNumber\" type=\"text\" name=\"passportNumber\"  value= {employeeDetails.passportDetails.passportNumber} onChange={this.onPassportDetailsChange} placeholder=\"Passport Number\" />\n                                                        {errors.passportNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.issueDate} style={{ color: 'red' }} label=\"Issue Date\">\n                                                    <Popover content=\"Passport issue date\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onPassportIssueDateChange} format=\"MM/DD/YYYY\" placeholder= \"Issue Date\" defaultValue= {moment()} />\n                                                            {errors.issueDate}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.expirationDate} style={{ color: 'red' }} label=\"Expiration Date\">\n                                                    <Popover content=\"Passport expiration date\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onPassportExpirationDateChange} format=\"MM/DD/YYYY\" placeholder= \"Expiration Date\" defaultValue= {moment()} />\n                                                            {errors.expirationDate}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.countryOfCitizenship} style={{ color: 'red' }} label=\"Country Of Citizenship\">\n                                                    <Popover content=\"Country of citizenship\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"countryOfCitizenship\" type=\"text\" name=\"countryOfCitizenship\"  value= {employeeDetails.passportDetails.countryOfCitizenship} onChange={this.onPassportDetailsChange} placeholder=\"Country Of Citizenship\" /> */}\n                                                        <Select\n                                                            mode=\"countryOfCitizenship\"\n                                                            id=\"countryOfCitizenship\"\n                                                            name=\"countryOfCitizenship\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"Country of Citizen\"\n                                                            onChange={this.onPassportCountryOfCitizenChange}\n                                                            value= {employeeDetails.passportDetails.countryOfCitizenship}\n                                                        >\n                                                            {\n                                                                COUNTRIES_LIST.map((country) => {\n                                                                    return (\n                                                                        <Option key={country.name}>{country.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                            {errors.countryOfCitizenship}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.socialSecurityNumber} style={{ color: 'red' }} label=\"Social Security Number\">\n                                                    <Popover content=\"Social security number\">\n                                                        <Input type=\"text\" disabled={isDisabledTrue} id=\"socialSecurityNumber\" pattern=\"\\d*\" maxLength=\"9\" name=\"socialSecurityNumber\"  value= {employeeDetails.passportDetails.socialSecurityNumber} onChange={this.onPassportDetailsChange} placeholder=\"Social Security Number\" />\n                                                            {errors.socialSecurityNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.alienNumber} style={{ color: 'red' }} label=\"Alien Number\">\n                                                    <Popover content=\"Alien number\">\n                                                        <Input disabled={isDisabledTrue} id=\"alienNumber\" type=\"number\" name=\"alienNumber\"  value= {employeeDetails.passportDetails.alienNumber} onChange={this.onPassportDetailsChange} placeholder=\"Alien Number\" />\n                                                            {errors.alienNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                        </Row>\n                                        <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"Immigration Information\">\n                                                <Form.Item error={!!errors.currentStatus} style={{ color: 'red' }} label=\"Current Status\">\n                                                    <Popover content=\"Current status\">\n                                                        <RadioGroup disabled={isDisabledTrue} name=\"currentStatus\" value= {employeeDetails.immigirationDetails.currentStatus} onChange={this.onImmigirationDetailsChange} >\n                                                            <Radio value={'F1'}>F1</Radio>\n                                                            <Radio value={'H1B'}>H1B</Radio>\n                                                            <Radio value={'H4'}>H4</Radio>\n                                                            <Radio value={'B1/B2'}>B1/B2</Radio>\n                                                            <Radio value={'L1/L2'}>L1/L2</Radio>\n                                                            <Radio>\n                                                                Others<Input style={{ width: 100, marginLeft: 10 }} name=\"currentStatus\" onChange={this.onImmigirationDetailsChange} />\n                                                            </Radio>\n                                                        </RadioGroup>\n                                                        {errors.currentStatus}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item><br />\n                                                <Form.Item error={!!errors.USVisaIssued} style={{ color: 'red' }} label=\"Visa Start Date\">\n                                                    <Popover content=\"US visa issued date\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onImmigrationUSVisaIssuedDateChange} format=\"MM/DD/YYYY\" placeholder= \"Visa Start Date\" defaultValue= {moment()} />\n                                                        {errors.USVisaIssued}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.visaExpireDate} style={{ color: 'red' }} label=\"Visa Expire Date\">\n                                                    <Popover content=\"Visa expired date\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onImmigrationvisaExpireDateDateChange} format=\"MM/DD/YYYY\" placeholder= \"Visa Expire Date\" defaultValue= {moment()} />\n                                                            {errors.visaExpireDate}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.immigrationConsule} style={{ color: 'red' }} label=\"Consulate Name\">\n                                                    <Popover content=\"Immigration consule\">\n                                                        <Input disabled={isDisabledTrue} id=\"immigrationConsule\" type=\"text\" name=\"immigrationConsule\"  value= {employeeDetails.immigirationDetails.immigrationConsule} onChange={this.onImmigirationDetailsChange} placeholder=\"Consulate\" />\n                                                        {errors.immigrationConsule}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.consulateCity} style={{ color: 'red' }} label=\"City\">\n                                                    <Popover content=\"Consulate city\">\n                                                        <Input disabled={isDisabledTrue} id=\"consulateCity\" type=\"text\" name=\"consulateCity\"  value= {employeeDetails.immigirationDetails.consulateCity} onChange={this.onImmigirationDetailsChange} placeholder=\"Consulate-City\" />\n                                                        {errors.consulateCity}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.consulateCountry} style={{ color: 'red' }} label=\"Country\">\n                                                    <Popover content=\"Cosukate country\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"consulateCountry\" type=\"text\" name=\"consulateCountry\"  value= {employeeDetails.immigirationDetails.consulateCountry} onChange={this.onImmigirationDetailsChange} placeholder=\"Consulate-Country\" /> */}\n                                                        <Select\n                                                            mode=\"consulateCountry\"\n                                                            id=\"consulateCountry\"\n                                                            name=\"consulateCountry\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"Consulate Country\"\n                                                            onChange={this.onConsuleCountryChange}\n                                                            value= {employeeDetails.immigirationDetails.consulateCountry}\n                                                        >\n                                                            {\n                                                                COUNTRIES_LIST.map((country) => {\n                                                                    return (\n                                                                        <Option key={country.name}>{country.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                        {errors.consulateCountry}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.i94Number} style={{ color: 'red' }} label=\"I-94\">\n                                                    <Popover content=\"I-94 number\">\n                                                        <Input disabled={isDisabledTrue} id=\"i94Number\" type=\"number\" name=\"i94Number\"  value= {employeeDetails.immigirationDetails.i94Number} onChange={this.onImmigirationDetailsChange} placeholder=\"I-94\" />\n                                                        {errors.i94Number}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.lastEntryUS} style={{ color: 'red' }} label=\"Last Entry US\">\n                                                    <Popover content=\"Last entry US\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onImmigrationLastEntryUSDateChange} format=\"MM/DD/YYYY\" placeholder= \"Last Entry US\" defaultValue= {moment()} />\n                                                        {errors.lastEntryUS}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.portOfEntry} style={{ color: 'red' }} label=\"Port Of Entry (City, State)\">\n                                                    <Popover content=\"Port of entry\">\n                                                        <Input disabled={isDisabledTrue} id=\"portOfEntry\" type=\"text\" name=\"portOfEntry\"  value= {employeeDetails.immigirationDetails.portOfEntry} onChange={this.onImmigirationDetailsChange} placeholder=\"Example: Chicago, IL\" />\n                                                        {/* <DatePicker onChange={this.onPortOfEntryDateChange} format=\"MM/DD/YYYY\" placeholder= \"Port of ENtry\" defaultValue= {moment()} /> */}\n                                                        {errors.portOfEntry}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                        </Row>\n                                        <Row>\n                                        {/* <Col xs={12} sm={12} md={12} lg={12} xl={12}> */}\n                                            <Card title=\"I-140 Approval\">\n                                                <Form.Item error={!!errors.I140ApprovalStartDate} style={{ color: 'red' }} label=\"I-140 Approval Start Date\">\n                                                    <Popover content=\"I-140 Approval Start date\">\n                                                        {/* <Input id=\"I140ApprovalStartDate\" type=\"text\" name=\"I140ApprovalStartDate\"  value= {employeeDetails.I140Detials.I140ApprovalStartDate} onChange={this.onI140DetailsChange} placeholder=\"I-140 Approval start date\" /> */}\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onI140ApprovalStartDateChange} format=\"MM/DD/YYYY\" placeholder= \"I-140 Approval Start Date\" defaultValue= {moment()} />\n                                                        {errors.I140ApprovalStartDate}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                {/* <Form.Item error={!!errors.I140Approval} style={{ color: 'red' }} label=\"I-140 Approval\">\n                                                    <Popover content=\"I-140 Approval\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onI140DateChange} format=\"MM/DD/YYYY\" placeholder= \"I-140 Approval\" defaultValue= {moment()} />\n                                                        {errors.I140Approval}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item> */}\n                                                <Form.Item error={!!errors.I140Receipt} style={{ color: 'red' }} label=\"I-140 Receipt\">\n                                                    <Popover content=\"I-140 Receipt\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onI140ReceiptDateChange} format=\"MM/DD/YYYY\" placeholder= \"I-140 Receipt\" defaultValue= {moment()} />\n                                                        {errors.I140Receipt}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.I140Documents} style={{ color: 'red' }} label=\"I-140 Documents\">\n                                                    <Popover content=\"I-140 Documents\">\n                                                        <Input id=\"I140Documents\" type=\"file\" name=\"I140Documents\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"I-140 Documents\" />\n                                                        {errors.I140Documents}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.I140DocumentsProgress} max=\"100\"/>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col>  */}\n                                    </Row>\n                                    </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"Travel Information\" key=\"3\">\n                                    <Form layout=\"inline\">\n                                    <Row>\n                                        <Col >\n                                            <Card title=\"Overseas Travel History (If Applicable)\">\n                                                <button onClick={this.addTravelHistory}>Add Travel history</button>\n                                                {\n                                                    travelHistory.map((val, idx)=> {\n                                                        return(\n                                                            <div key={idx}>\n                                                                <Form.Item error={!!errors.arrivalDate} style={{ color: 'red' }} label=\"Arrival Date\">\n                                                                    <Popover content=\"Arrival date\">\n                                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onTravelHistoryArrivalDateChange(idx)} format=\"MM/DD/YYYY\" placeholder= \"Arrival Date\" defaultValue= {moment()} />\n                                                                            {errors.arrivalDate}\n                                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                                    </Popover>\n                                                                </Form.Item>\n                                                                <Form.Item error={!!errors.departureDate} style={{ color: 'red' }} label=\"Departure Date\">\n                                                                    <Popover content=\"Departure date\">\n                                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onTravelHistoryDepartureDateChange(idx)} format=\"MM/DD/YYYY\" placeholder= \"Departure Date\" defaultValue= {moment()} />\n                                                                            {errors.departureDate}\n                                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                                    </Popover>\n                                                                </Form.Item>\n                                                                <Form.Item error={!!errors.daysSpent} style={{ color: 'red' }} label=\"Days Count\">\n                                                                    <Popover content=\"Days spent\">\n                                                                        <Input disabled={isDisabledTrue} type=\"number\" onChange={this.onTravelHistoryChange(idx)} placeholder=\"Days Count\" />\n                                                                            {errors.daysSpent}\n                                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                                    </Popover>\n                                                                </Form.Item>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"H4 Dependent Documents\" key=\"4\">\n                                        <Form layout=\"inline\">\n                                            <Row>\n                                                {renderChecklist}\n                                            </Row>\n                                        </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"H4 Dependent Information\" key=\"5\">\n                                        <Form layout=\"inline\">\n                                            <Row>\n                                                <RadioGroup onChange={this.onMarraige} value={this.state.isMarried}>Are you Married ?\n                                                    <Radio value={true}>Yes</Radio>\n                                                    <Radio value={false}>No</Radio>\n                                                </RadioGroup>\n                                            </Row><br />\n                                            {renderH4DependentQuestion}<br />\n                                            {renderSpouseH4Question}<br />\n                                            {renderKidsH4Question}< br/>\n                                            <Row>\n                                                {renderSpouseH4}\n                                                {renderH4Dependent}\n                                            </Row>\n                                        </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"Project Information\" key=\"6\">\n                                    <Form layout=\"inline\">\n                                    <Row>\n                                        {/* <Col > */}\n                                            <Card title=\"Work Information(Client Name and Address must be accurate)\">\n                                                <Form.Item error={!!errors.clientName} style={{ color: 'red' }} label=\"Client Name\">\n                                                    <Popover content=\"Client name\">\n                                                        <Input disabled={isDisabledTrue} id=\"clientName\" type=\"text\" name=\"clientName\"  value= {employeeDetails.workDetails.clientName} onChange={this.onWorkDetailsChange} placeholder=\"Client Name\" />\n                                                        {errors.clientName}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientAddress} style={{ color: 'red' }} label=\"Address\">\n                                                    <Popover content=\"Client Address 1\">\n                                                        <Input disabled={isDisabledTrue} id=\"clientAddress\" type=\"text\" name=\"clientAddress\"  value= {employeeDetails.workDetails.clientAddress} onChange={this.onWorkDetailsChange} placeholder=\"Address\" />\n                                                        {errors.clientAddress}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientAddress2} style={{ color: 'red' }} label=\"Address 2\">\n                                                    <Popover content=\"Client Address 2\">\n                                                        <Input disabled={isDisabledTrue} id=\"clientAddress2\" type=\"text\" name=\"clientAddress2\"  value= {employeeDetails.workDetails.clientAddress2} onChange={this.onWorkDetailsChange} placeholder=\"Address 2\" />\n                                                        {errors.clientAddress2}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientCity} style={{ color: 'red' }} label=\"City\">\n                                                    <Popover content=\"Client city\">\n                                                        <Input disabled={isDisabledTrue} id=\"clientCity\" type=\"text\" name=\"clientCity\"  value= {employeeDetails.workDetails.clientCity} onChange={this.onWorkDetailsChange} placeholder=\"City\" />\n                                                        {errors.clientCity}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientState} style={{ color: 'red' }} label=\"State\">\n                                                    <Popover content=\"Client state\">\n                                                        {/* <Input disabled={isDisabledTrue} id=\"clientState\" type=\"text\" name=\"clientState\"  value= {employeeDetails.workDetails.clientState} onChange={this.onWorkDetailsChange} placeholder=\"State\" /> */}\n                                                        <Select\n                                                            mode=\"state\"\n                                                            disabled={isDisabledTrue}\n                                                            id=\"clientState\"\n                                                            name=\"clientState\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"States\"\n                                                            onChange={this.onClientStateSelect}\n                                                            value= {employeeDetails.workDetails.clientState}\n                                                        >\n                                                            {\n                                                                STATES_LIST.map((state) => {\n                                                                    return (\n                                                                        <Option key={state.name}>{state.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                        {errors.clientState}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientCountry} style={{ color: 'red' }} label=\"Country\">\n                                                    <Popover content=\"Client Country\">\n                                                        {/* <Input id=\"clientCountry\" type=\"text\" name=\"clientCountry\" value= {employeeDetails.workDetails.clientState} onChange={this.onWorkDetailsChange} placeholder=\"Country\" /> */}\n                                                        <Select\n                                                            mode=\"clientCountry\"\n                                                            id=\"clientCountry\"\n                                                            name=\"clientCountry\"\n                                                            style={{ width: '100px' }}\n                                                            placeholder=\"Country\"\n                                                            onChange={this.onClientCountryChange}\n                                                            value= {employeeDetails.workDetails.clientCountry}\n                                                        >\n                                                            {\n                                                                COUNTRIES_LIST.map((country) => {\n                                                                    return (\n                                                                        <Option key={country.name}>{country.name}</Option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                        {errors.clientCountry}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientZipCode} style={{ color: 'red' }} label=\"ZipCode\">\n                                                    <Popover content=\"Zipcode\">\n                                                        <Input disabled={isDisabledTrue} id=\"clientZipCode\" type=\"number\" name=\"clientZipCode\"  value= {employeeDetails.workDetails.clientZipCode} onChange={this.onWorkDetailsChange} placeholder=\"ZipCode\" />\n                                                        {errors.clientZipCode}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.vendorName} style={{ color: 'red' }} label=\"Vendor Name\">\n                                                    <Popover content=\"Vendor name\">\n                                                        <Input disabled={isDisabledTrue} id=\"vendorName\" type=\"text\" name=\"vendorName\"  value= {employeeDetails.workDetails.vendorName} onChange={this.onWorkDetailsChange} placeholder=\"Vendor Name\" />\n                                                        {errors.vendorName}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.vendorEmail} style={{ color: 'red' }} label=\"Vendor Email\">\n                                                    <Popover content=\"Vendor email\">\n                                                        <Input disabled={isDisabledTrue} id=\"vendorEmail\" type=\"text\" name=\"vendorEmail\"  value= {employeeDetails.workDetails.vendorEmail} onChange={this.onWorkDetailsChange} placeholder=\"Vendor Email\" />\n                                                        {errors.vendorEmail}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.contactNumber} style={{ color: 'red' }} label=\"Contact Number\">\n                                                    <Popover content=\"Contact number\">\n                                                        <Input disabled={isDisabledTrue} id=\"contactNumber\" type=\"number\" name=\"contactNumber\"  value= {employeeDetails.workDetails.contactNumber} onChange={this.onWorkDetailsChange} placeholder=\"Contact Number\" />\n                                                        {errors.contactNumber}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.projectStartDate} style={{ color: 'red' }} label=\"Project Start Date\">\n                                                    <Popover content=\"Project state date\">\n                                                        <DatePicker disabled={isDisabledTrue} onChange={this.onProjectStartDateChange} format=\"MM/DD/YYYY\" placeholder= \"Project Start Date\" defaultValue= {moment()} />\n                                                        {errors.projectStartDate}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                </Form.Item>\n                                            </Card>\n                                        {/* </Col> */}\n                                        </Row>\n                                        </Form>\n                                        </Panel>\n                                        <Panel className=\"boldClass\" header=\"Documents From Employee\" key=\"7\">\n                                        <Form layout=\"inline\">\n                                        <Row>\n                                        <Col >\n                                            <Card title=\"Documents From Employee\">\n                                                <div>\n                                                <Form.Item>\n                                                    <span style={{marginRight: '10px'}}>\n                                                        { this.props.adminUploads.clientLetterTemplate && this.props.adminUploads.clientLetterTemplatePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.props.adminUploads.clientLetterTemplate, this.props.adminUploads.clientLetterTemplatePathLower) } }>\n                                                                    Download Client Letter Template\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                    <span style={{marginLeft: '10px'}}>\n                                                        { this.props.adminUploads.vendorLetterTemplate && this.props.adminUploads.vendorLetterTemplatePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.props.adminUploads.vendorLetterTemplate, this.props.adminUploads.vendorLetterTemplatePathLower) } }>\n                                                                    Download Vendor Letter Template\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                </div>\n                                                <Form.Item error={!!errors.passportPage} style={{ color: 'red' }} label=\"Passport Page\">\n                                                    <Popover content=\"1st, last and visa pages\">\n                                                        <Input id=\"passportPage\" type=\"file\" name=\"passportPage\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Passport Page\" />\n                                                        {errors.passportPage}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.passportPageProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.passportPagePathLower && this.state.employeeDetails.passportPagePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.passportPage, this.state.employeeDetails.passportPagePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.i94} style={{ color: 'red' }} label=\"I-94\">\n                                                    <Popover content=\"I-94\">\n                                                        <Input id=\"i94\" type=\"file\" name=\"i94\"  onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"I-94\" />\n                                                        {errors.i94}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.i94Progress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.i94PathLower && this.state.employeeDetails.i94PathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.i94, this.state.employeeDetails.i94PathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.bachelorDegree} style={{ color: 'red' }} label=\"Bachelor Degree\">\n                                                    <Popover content=\"Bachelors degree and transcripts text\">\n                                                        <Input id=\"bachelorDegree\" type=\"file\" name=\"bachelorDegree\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Bachelor Degree\" />\n                                                        {errors.bachelorDegree}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.bachelorDegreeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.bachelorDegreePathLower && this.state.employeeDetails.bachelorDegreePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.bachelorDegree, this.state.employeeDetails.bachelorDegreePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.mastersTranscripts} style={{ color: 'red' }} label=\"Masters Transcripts\">\n                                                    <Popover content=\"Masters degree and transcripts text\">\n                                                        <Input id=\"mastersTranscripts\" type=\"file\" name=\"mastersTranscripts\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Masters Transcripts\" />\n                                                        {errors.mastersTranscripts}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.mastersTranscriptsProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.mastersTranscriptsPathLower && this.state.employeeDetails.mastersTranscriptsPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.mastersTranscripts, this.state.employeeDetails.mastersTranscriptsPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.universityDocs} style={{ color: 'red' }} label=\"University Documents\">\n                                                    <Popover content=\"Upload I-20, EAD documents\">\n                                                        <Input id=\"universityDocs\" type=\"file\" name=\"universityDocs\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"University Documents\" />\n                                                        {errors.universityDocs}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.universityDocsProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.universityDocsPathLower && this.state.employeeDetails.universityDocsPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.universityDocs, this.state.employeeDetails.universityDocsPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.resume} style={{ color: 'red' }} label=\"Resume\">\n                                                    <Popover content=\"Resume\">\n                                                        <Input id=\"resume\" type=\"file\" name=\"resume\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Resume\" />\n                                                        {errors.resume}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.resumeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.resumePathLower && this.state.employeeDetails.resumePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.resume, this.state.employeeDetails.resumePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.ssnCopy} style={{ color: 'red' }} label=\"SSN\">\n                                                    <Popover content=\"SSN copy\">\n                                                        <Input id=\"ssnCopy\" type=\"file\" name=\"ssnCopy\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"SSN\" />\n                                                        {errors.ssnCopy}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.ssnCopyProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.ssnCopyPathLower && this.state.employeeDetails.ssnCopyPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.ssnCopy, this.state.employeeDetails.ssnCopyPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                {renderSSNCopyForSpouse}\n                                                <Form.Item error={!!errors.payStubs} style={{ color: 'red' }} label=\"Pay Stubs\">\n                                                    <Popover content=\"Most recent 3 pays\">\n                                                        <Input id=\"payStubs\" type=\"file\" name=\"payStubs\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Pay Stubs\" />\n                                                        {errors.payStubs}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.payStubsProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.payStubsPathLower && this.state.employeeDetails.payStubsPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.payStubs, this.state.employeeDetails.payStubsPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.clientLetter} style={{ color: 'red' }} label=\"Client Letter\">\n                                                    <Popover content=\"Client Letter\">\n                                                        <Input id=\"clientLetter\" type=\"file\" name=\"clientLetter\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Client Letter\" />\n                                                        {errors.clientLetter}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.clientLetterProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.clientLetterPathLower && this.state.employeeDetails.clientLetterPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.clientLetter, this.state.employeeDetails.clientLetterPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.vendorLetter} style={{ color: 'red' }} label=\"Vendor Letter\">\n                                                    <Popover content=\"Vendor Letter\">\n                                                        <Input id=\"vendorLetter\" type=\"file\" name=\"vendorLetter\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Vendor Letter\" />\n                                                        {errors.vendorLetter}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.vendorLetterProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.vendorLetterPathLower && this.state.employeeDetails.vendorLetterPathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <Popover content=\"Uploading new document will discard existing document\">\n                                                                    <span>Upload new Document</span>\n                                                                </Popover>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.vendorLetter, this.state.employeeDetails.vendorLetterPathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.additionalDocument1ForEmployee} style={{ color: 'red' }} label=\"Additional Document 1\">\n                                                    <Popover content=\"Additional Document 1\">\n                                                        <Input id=\"additionalDocument1ForEmployee\" type=\"file\" name=\"additionalDocument1ForEmployee\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Additional Document 1\" />\n                                                        {errors.additionalDocument1ForEmployee}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.additionalDocument1ForEmployeeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.additionalDocument1ForEmployeePathLower && this.state.employeeDetails.additionalDocument1ForEmployeePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <span>Upload new Document</span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument1ForEmployee, this.state.employeeDetails.additionalDocument1ForEmployeePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.additionalDocument2ForEmployee} style={{ color: 'red' }} label=\"Additional Document 2\">\n                                                    <Popover content=\"Additional Document 2\">\n                                                        <Input id=\"additionalDocument2ForEmployee\" type=\"file\" name=\"additionalDocument2ForEmployee\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Additional Document 2\" />\n                                                        {errors.additionalDocument2ForEmployee}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.additionalDocument2ForEmployeeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.additionalDocument2ForEmployeePathLower && this.state.employeeDetails.additionalDocument2ForEmployeePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <span>Upload new Document</span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument2ForEmployee, this.state.employeeDetails.additionalDocument2ForEmployeePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.additionalDocument3ForEmployee} style={{ color: 'red' }} label=\"Additional Document 3\">\n                                                    <Popover content=\"Additional Document 3\">\n                                                        <Input id=\"additionalDocument3ForEmployee\" type=\"file\" name=\"additionalDocument3ForEmployee\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Additional Document 3\" />\n                                                        {errors.additionalDocument3ForEmployee}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.additionalDocument3ForEmployeeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.additionalDocument3ForEmployeePathLower && this.state.employeeDetails.additionalDocument3ForEmployeePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <span>Upload new Document</span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument3ForEmployee, this.state.employeeDetails.additionalDocument3ForEmployeePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.additionalDocument4ForEmployee} style={{ color: 'red' }} label=\"Additional Document 4\">\n                                                    <Popover content=\"Additional Document 4\">\n                                                        <Input id=\"additionalDocument4ForEmployee\" type=\"file\" name=\"additionalDocument4ForEmployee\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Additional Document 4\" />\n                                                        {errors.additionalDocument4ForEmployee}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.additionalDocument4ForEmployeeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.additionalDocument4ForEmployeePathLower && this.state.employeeDetails.additionalDocument4ForEmployeePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <span>Upload new Document</span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument4ForEmployee, this.state.employeeDetails.additionalDocument4ForEmployeePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                                <Form.Item error={!!errors.additionalDocument5ForEmployee} style={{ color: 'red' }} label=\"Additional Document 5\">\n                                                    <Popover content=\"Additional Document 5\">\n                                                        <Input id=\"additionalDocument5ForEmployee\" type=\"file\" name=\"additionalDocument5ForEmployee\" onChange={(e) => this.uploadFile(e, \"Employee\")} placeholder=\"Additional Document 5\" />\n                                                        {errors.additionalDocument5ForEmployee}\n                                                        <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                    </Popover>\n                                                    <progress value={this.state.additionalDocument5ForEmployeeProgress} max=\"100\"/>\n                                                    <span>\n                                                        { this.state.employeeDetails.additionalDocument5ForEmployeePathLower && this.state.employeeDetails.additionalDocument5ForEmployeePathLower !== '' ?\n                                                            (\n                                                            <span>\n                                                                <span>Upload new Document</span>\n                                                                <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument5ForEmployee, this.state.employeeDetails.additionalDocument5ForEmployeePathLower) } }>\n                                                                    Download Recent document\n                                                                </a>\n                                                            </span>\n                                                            )\n                                                            : (<span></span>)\n                                                        }\n                                                    </span>\n                                                </Form.Item>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    </Form>\n                                    </Panel>\n                                    <Panel className=\"boldClass\" header=\"Documents From Reliable HR\" key=\"8\">\n                                    <Form  layout=\"inline\">\n                                        <Row>\n                                            <Col>\n                                                <Card title=\"Documents From HR\">\n                                                    <Form.Item error={!!errors.employmentDocs} style={{ color: 'red' }} label=\"Employee Agreements\">\n                                                        <Popover content=\"Employee documents\">\n                                                            <Input id=\"employmentDocs\" type=\"file\" name=\"employmentDocs\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Employee Agreements\" />\n                                                            {errors.employmentDocs}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.employmentDocsProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.employmentDocsPathLower && this.state.employmentDocsPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employmentDocs, this.state.employmentDocsPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.vendorDocs} style={{ color: 'red' }} label=\"Employee and Employer Relation\">\n                                                        <Popover content=\"Employer relation document\">\n                                                            <Input id=\"vendorDocs\" type=\"file\" name=\"vendorDocs\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Employee and Employer relation\" />\n                                                            {errors.vendorDocs}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.vendorDocsProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.vendorDocsPathLower && this.state.vendorDocsPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.vendorDocs, this.state.vendorDocsPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.layer1} style={{ color: 'red' }} label=\"Layer 1\">\n                                                        <Popover content=\"Layer 1\">\n                                                            <Input disabled={isDisabledTrue} id=\"layer1\" type=\"text\" name=\"layer1\"  value= {reliableDocuments.layer1} onChange={this.onWorkDetailsChange} placeholder=\"Layer 1\" />\n                                                            {errors.layer1}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.layer1Documents} style={{ color: 'red' }} label=\"Layer 1 Documents\">\n                                                        <Popover content=\"Layer 1 document\">\n                                                            <Input id=\"layer1Documents\" type=\"file\" name=\"layer1Documents\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Layer 1 Documents\" />\n                                                            {errors.layer1Documents}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.layer1DocumentsProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.layer1DocumentsPathLower && this.state.layer1DocumentsPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.layer1Documents, this.state.layer1DocumentsPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.layer2} style={{ color: 'red' }} label=\"Layer 2\">\n                                                        <Popover content=\"layer 2\">\n                                                            <Input disabled={isDisabledTrue} id=\"layer2\" type=\"text\" name=\"layer2\"  value= {reliableDocuments.layer2} onChange={this.onWorkDetailsChange} placeholder=\"Layer 2\" />\n                                                            {errors.layer2}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.layer2Documents} style={{ color: 'red' }} label=\"Layer 2 Documents\">\n                                                        <Popover content=\"layer 2 document\">\n                                                            <Input id=\"layer2Documents\" type=\"file\" name=\"layer2Documents\" onChange={() => (e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Layer 2 Documents\" />\n                                                            {errors.layer2Documents}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.layer2DocumentsProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.layer2DocumentsPathLower && this.state.layer2DocumentsPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.layer2Documents, this.state.layer2DocumentsPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.lca} style={{ color: 'red' }} label=\"LCA\">\n                                                        <Popover content=\"LCA\">\n                                                            <Input id=\"lca\" type=\"file\" name=\"lca\" onChange={() => (e) => this.uploadFile(e, \"Reliable\")} placeholder=\"LCA\" />\n                                                            {errors.lca}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.lcaProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.lcaPathLower && this.state.lcaPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.lca, this.state.lcaPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.additionalDocument1ForReliableHR} style={{ color: 'red' }} label=\"Additional Document 1\">\n                                                        <Popover content=\"Additional Document 1\">\n                                                            <Input id=\"additionalDocument1ForReliableHR\" type=\"file\" name=\"additionalDocument1ForReliableHR\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Additional Document 1\" />\n                                                            {errors.additionalDocument1ForReliableHR}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.additionalDocument1ForReliableHRProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.employeeDetails.additionalDocument1ForReliableHRPathLower && this.state.employeeDetails.additionalDocument1ForReliableHRPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument1ForReliableHR, this.state.employeeDetails.additionalDocument1ForReliableHRPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.additionalDocument2ForReliableHR} style={{ color: 'red' }} label=\"Additional Document 2\">\n                                                        <Popover content=\"Additional Document 2\">\n                                                            <Input id=\"additionalDocument2ForReliableHR\" type=\"file\" name=\"additionalDocument2ForReliableHR\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Additional Document 2\" />\n                                                            {errors.additionalDocument2ForReliableHR}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.additionalDocument2ForReliableHRProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.employeeDetails.additionalDocument2ForReliableHRPathLower && this.state.employeeDetails.additionalDocument2ForReliableHRPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument2ForReliableHR, this.state.employeeDetails.additionalDocument2ForReliableHRPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.additionalDocument3ForReliableHR} style={{ color: 'red' }} label=\"Additional Document 3\">\n                                                        <Popover content=\"Additional Document 2\">\n                                                            <Input id=\"additionalDocument3ForReliableHR\" type=\"file\" name=\"additionalDocument3ForReliableHR\" onChange={(e) => this.uploadFile(e, \"Reliable\")} placeholder=\"Additional Document 3\" />\n                                                            {errors.additionalDocument3ForReliableHR}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.additionalDocument3ForReliableHRProgress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.employeeDetails.additionalDocument3ForReliableHRPathLower && this.state.employeeDetails.additionalDocument3ForReliableHRPathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.employeeDetails.additionalDocument3ForReliableHR, this.state.employeeDetails.additionalDocument3ForReliableHRPathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                </Card>\n                                            </Col>\n                                            </Row>\n                                            </Form>\n                                            </Panel>\n                                            <Panel className=\"boldClass\" header=\"Documents From Attorney\" key=\"9\">\n                                            <Form layout=\"inline\">\n                                            <Row>\n                                            <Col >\n                                                <Card title=\"Documents From Attorney\">\n                                                    <Form.Item error={!!errors.attorneyDocument1} style={{ color: 'red' }} label=\"Attorney Document 1\">\n                                                        <Popover content=\"Attorney document 1\">\n                                                            <Input id=\"attorneyDocument1\" type=\"file\" name=\"attorneyDocument1\" onChange={(e) => this.uploadFile(e, \"Attorney\")} placeholder=\"Attorney Document 1\" />\n                                                            {errors.attorneyDocument1}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.attorneyDocument1Progress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.attorneyDocument1PathLower && this.state.attorneyDocument1PathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.attorneyDocument1, this.state.attorneyDocument1PathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.attorneyDocument2} style={{ color: 'red' }} label=\"Attorney Document 2\">\n                                                        <Popover content=\"Attorney document 2\">\n                                                            <Input id=\"attorneyDocument2\" type=\"file\" name=\"attorneyDocument2\" onChange={(e) => this.uploadFile(e, \"Attorney\")} placeholder=\"Attorney Document 2\" />\n                                                            {errors.attorneyDocument2}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.attorneyDocument2Progress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.attorneyDocument2PathLower && this.state.attorneyDocument2PathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.attorneyDocument2, this.state.attorneyDocument2PathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.attorneyDocument3} style={{ color: 'red' }} label=\"Attorney Document 3\">\n                                                        <Popover content=\"Attorney document 3\">\n                                                            <Input id=\"attorneyDocument3\" type=\"file\" name=\"attorneyDocument3\" onChange={(e) => this.uploadFile(e, \"Attorney\")} placeholder=\"Attorney Document 3\" />\n                                                            {errors.attorneyDocument3}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.attorneyDocument3Progress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.attorneyDocument3PathLower && this.state.attorneyDocument3PathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.attorneyDocument3, this.state.attorneyDocument3PathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                    <Form.Item error={!!errors.attorneyDocument4} style={{ color: 'red' }} label=\"Attorney Document 4\">\n                                                        <Popover content=\"Attorney document 4\">\n                                                            <Input id=\"attorneyDocument4\" type=\"file\" name=\"attorneyDocument4\" onChange={(e) => this.uploadFile(e, \"Attorney\")} placeholder=\"Attorney Document 4\" />\n                                                            {errors.attorneyDocument4}\n                                                            <Icon type=\"info-circle\" style={{ color: '#08c' }}/>\n                                                        </Popover>\n                                                        <progress value={this.state.attorneyDocument4Progress} max=\"100\"/>\n                                                        <span>\n                                                            { this.state.attorneyDocument4PathLower && this.state.attorneyDocument4PathLower !== '' ?\n                                                                (\n                                                                <span>\n                                                                    <span>Upload new Document</span>\n                                                                    <a href=\"#\" onClick={ (e) => {this.downloadFile(e, this.state.attorneyDocument4, this.state.attorneyDocument4PathLower) } }>\n                                                                        Download Recent document\n                                                                    </a>\n                                                                </span>\n                                                                )\n                                                                : (<span></span>)\n                                                            }\n                                                        </span>\n                                                    </Form.Item>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                    </Panel>\n                                    <Form>\n                                        <Row>\n                                            { saveButton }\n\t\t\t\t\t\t\t\t\t\t\t{ submitButton }\n                                            { downloadButton }\n                                        </Row>\n                                    </Form>\n                        </Collapse>\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        Reliable Immigration Form @ version: 1.0.0\n                    </Footer>\n                </Layout>\n            </div>\n         );\n    }\n}\n\nH1bForm.protoTypes = {\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.loggedInUser,\n        getEmployeesList:state.getEmployeesList,\n        sucessFormSubmission: state.sucessFormSubmission,\n        adminUploads: state.adminUploads,\n        isAdmin: state.isAdmin,\n        employeeData: state.employeeData\n    }\n};\n\nexport default connect(mapStateToProps)(H1bForm);\n","//Shaik DropBox access key\nexport const DROPBOX_ACCESS_TOKEN_KEY = '1tc-9rsq56AAAAAAAAAALLg7kWony_pO3crJaojpoGymNWm_T4gt_jfchOSQBBiZ';\n//Sandeep DropBox access key\n// export const DROPBOX_ACCESS_TOKEN_KEY = 'hB7YmQsXM0AAAAAAAAAACi7s1qHVl3dYAnYremo9KSSak_8x6c30pT_bbitQfeH0';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions';\n\nclass Logout extends Component {\n\n  componentDidMount(){\n    this.props.dispatch(logout());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    if(!nextProps.loginStatus) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return (\n      <div>Logout</div>\n    );\n  }\n}\n\nLogout.propTypes = {\n  // logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps)(Logout);\n","import React, { Component } from 'react';\nimport  Validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { forgotPassword } from '../../actions';\nimport { Form, Input, Button, Card, Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\nclass ForgotPassword extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            data:{\n                email: ''\n            },\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(nextProps);\n    }\n\n    onChange = e => this.setState({\n        data: { ...this.state.data, [e.target.name]: e.target.value}\n    });\n\n    onSubmit = () => {\n      console.log(this.state.data);\n      const errors = this.validate(this.state.data);\n      this.setState({errors});\n      if(Object.keys(errors).length===0){\n          this.props.dispatch(forgotPassword(this.state.data.email));\n      }\n    };\n\n    validate = data => {\n        const errors = {};\n        if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n        return errors;\n    }\n\n    render() {\n        const { data, errors } = this.state;\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', height:'100%' }}>\n                <Row gutter={16}>\n                    <Col offset={8} span={8}>\n                        <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                    </Col>\n                    <Col offset={8} span={8}>\n                        <Card title=\"Forgot Password\">\n                            <Form>\n                                <Form.Item style={{color: 'red'}} error={!!errors.email}>\n                                    <Input id=\"email\" type=\"text\" name=\"email\" value= {data.email} onChange={this.onChange} placeholder=\"example@example.com\" />\n                                    {errors.email}\n                                </Form.Item>\n                                <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n                                <Form.Item>\n                                    <Link style={{float: 'left'}} to=\"/\">Login</Link>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nForgotPassword.protoTypes = {\n\n};\n\nconst mapStateToProps = state => ({\n    // error: state.error\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport  Validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../actions';\nimport { Form, Input, Button, Card, Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            data:{\n                email: '',\n                password: ''\n            },\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps, state){\n        if(nextProps.signUpStatus) {\n            alert('Account created successfully');\n            nextProps.history.push(\"/\");\n        }\n        if(nextProps.error !== \"\") {\n            state.errors = {email: nextProps.error};\n        }\n        return null;\n    }\n\n    onChange = e => this.setState({\n        data: { ...this.state.data, [e.target.name]: e.target.value}\n    });\n\n    onSubmit = () => {\n      console.log(this.state.data);\n        const errors = this.validate(this.state.data);\n        this.setState({errors});\n        if(Object.keys(errors).length===0){\n            this.props.dispatch(signUp(this.state.data));\n        }\n    };\n\n    validate = data => {\n        const errors = {};\n        if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n        if(!data.password) errors.password = \"Please enter valid Password\";\n        if(data.password.length < 6) errors.password = \"Password must be minimum 6 characters\";\n        return errors;\n    }\n\n    render() {\n        const { data, errors } = this.state;\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', height:'100%' }}>\n                <Row gutter={16}>\n                    <Col offset={8} span={8}>\n                        <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                    </Col>\n                    <Col offset={8} span={8}>\n                        <Card title=\"Sign Up\">\n                            <Form>\n                                <Form.Item style={{color: 'red'}} error={!!errors.email}>\n                                    <Input id=\"email\" type=\"text\" name=\"email\" value= {data.email} onChange={this.onChange} placeholder=\"example@example.com\" />\n                                    {errors.email}\n                                </Form.Item>\n                                <Form.Item style={{color: 'red'}} error={!!errors.password}>\n                                        <Input id=\"password\" type=\"password\" name=\"password\" value= {data.password} onChange={this.onChange} placeholder=\"Make it Secure\" />\n                                    {errors.password}\n                                </Form.Item>\n                                <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n                                <Form.Item>\n                                    <Link style={{float: 'right'}} to=\"/\">Login</Link>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nSignup.protoTypes = {\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error,\n        signUpStatus: state.signUpStatus\n    }\n};\n\nexport default connect(mapStateToProps)(Signup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import { getListOfEmployees } from '../../actions';\nimport { Table, Menu, Icon, Layout, Row, Col } from 'antd'\nimport \"antd/dist/antd.css\";\nimport { setEmployeeData } from '../../actions';\n\nconst { Header, Content, Footer } = Layout;\n\nconst columns = [{\n    title: 'First Name',\n    dataIndex: 'firstName',\n  }, {\n    title: 'Last Name',\n    dataIndex: 'lastName',\n  }, {\n    title: 'Email',\n    dataIndex: 'contactDetails.email',\n  }];\n \nclass EmployeeList extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            list: []\n        }\n        this.onClick = this.onClick.bind(this);\n        this.onRowSelect = this.onRowSelect.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps, state){\n        state.list = nextProps.getEmployeesList;\n        return null;\n    }\n\n    onClick(e, data) {\n        e.preventDefault();\n        console.log(data);\n    }\n\n    onRowSelect(data) {\n        this.props.dispatch(setEmployeeData(data));\n        this.props.history.push('/form');\n    }\n\n    render() {\n        const data = this.state.list;\n\n        return (\n            <div>\n                <Layout>\n                    <Header className=\"card\" style={{ background: '#fff', padding: 0 }} >\n                        <Row>\n                            <Col span={4} style={{ alignContent: 'left', paddingLeft: 20 }}>\n                                <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                            </Col>\n                            <Col span={12} style={{ fontWeight: 'bold', color: '#0066c', textAlign: 'center', paddingLeft: 65 }}>\n                                <h1 style={{ fontWeight: 'bold', color: '#0066c' }}><Link style={{ float: 'right'}} to=\"/h1bform\">Reliable Immigration Form</Link></h1>\n                            </Col>\n                             <Col span={8} style={{ float: 'right' }}>\n                                <Menu style={{ float: 'right'}}>\n                                    <Menu.SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"down-circle\" />Menu</span>}>\n                                        <Menu.Item><Link to=\"/employeelist\">Employee List</Link></Menu.Item>\n                                        <Menu.Divider />\n                                        <Menu.Item><Link to=\"/admin\">Admin Panel</Link></Menu.Item>\n                                        <Menu.Divider />\n                                        <Menu.Item><Link to=\"/logout\">Logout</Link></Menu.Item>\n                                    </Menu.SubMenu>\n                                </Menu>\n                             </Col> \n                        </Row>\n                    </Header>\n                    <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n                        <Table \n                            onRow={(data) => ({\n                                onClick: () => { this.onRowSelect(data) }\n                            })}\n                            columns={columns}\n                            dataSource={data} \n                        />\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        Reliable Immigration Form @ version: 1.0.0\n                    </Footer>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nEmployeeList.protoTypes = {\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        getEmployeesList:state.getEmployeesList,\n        employeeData: state.employeeData\n    }\n};\n\nexport default connect(mapStateToProps)(EmployeeList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nclass PrivateRoute extends Component {\n    render() {\n      const { component: Component, loginStatus, ...props } = this.props\n  \n      return (\n        <Route \n          {...props} \n          render={props => (\n            loginStatus ?\n              <Component {...props} /> :\n              <Redirect to='/' />\n          )} \n        />\n      )\n    }\n  }\n\n\nconst mapStateToProps = state => {\n    return {\n     loginStatus: state.loginStatus    \n  }};\n\n  export default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon, Layout, Row, Col, Form, Card, Input } from 'antd'\nimport { adminUploads } from '../../actions';\nimport \"antd/dist/antd.css\";\nimport { DROPBOX_ACCESS_TOKEN_KEY } from '../../stores/config';\n\n//To access data from the web\nconst xhr = new XMLHttpRequest();\n// import file saver to download the file's\nconst FileSaver = require('file-saver');\n\n//Access token to acces dropbox account\nconst dropboxToken = DROPBOX_ACCESS_TOKEN_KEY;\n\nconst { Header, Content, Footer } = Layout;\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    // defining the state to the component\n    this.state = {\n      clientLetterTemplateProgress: 0,\n      clientLetterTemplate: '',\n      clientLetterTemplatePathLower: '',\n      vendorLetterTemplateProgress: 0,\n      vendorLetterTemplate: '',\n      vendorLetterTemplatePathLower: '',\n      errors: {}\n    }\n    \n  }\n\n  static getDerivedStateFromProps(nextProps, state){\n    console.log(nextProps);\n    return null;\n  }\n\n  //Upload file to the dropbox\n  uploadFile = (e, fN) => {\n    // this keyword is not working inside the xhr functions, th is declared as proxy to this keyword\n    const th = this;\n    // let errorDetails = Object.assign({}, this.state.errors);\n    let errorDetails = new Map();\n\n    const file = e.target.files[0];\n    const filename = e.target.name;\n\n    if(e.target.files[0].type === \"application/pdf\") {\n                \n      xhr.upload.onprogress = function(evt) {\n          const percentComplete = parseInt(100.0 * evt.loaded / evt.total);\n          th.setState({[filename+\"Progress\"] :percentComplete});\n          // Upload in progress. Do something here with the percent complete.\n      };\n      \n      xhr.onload = function() {\n        if (xhr.status === 200) {\n            const fileInfo = JSON.parse(xhr.response);\n            // console.log(fileInfo);\n            errorDetails.clientLetterTemplate = '';\n            th.setState({[filename]:fileInfo.name});\n            th.setState({[filename+\"PathLower\"]:fileInfo.path_lower});\n            th.props.dispatch(adminUploads({[filename]:fileInfo.name, [filename+\"PathLower\"]:fileInfo.path_lower}));\n            // Upload succeeded. Do something here with the file info.\n        }\n        else {\n            const errorMessage = xhr.response || 'Unable to upload file';\n            console.log(errorMessage);\n            // Upload failed. Do something here with the error.\n        }\n      };\n      \n      xhr.open('POST', 'https://content.dropboxapi.com/2/files/upload');\n      xhr.setRequestHeader('Authorization', 'Bearer ' + dropboxToken);\n      xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n      xhr.setRequestHeader('Dropbox-API-Arg', JSON.stringify({\n      path: '/'+ 'Talent team Team Folder' +'/'+'Admin/' +  file.name,\n      mode: 'add',\n      autorename: true,\n      mute: false\n      }));\n      \n      xhr.send(file);\n  } else {\n      errorDetails.clientLetterTemplate = 'Please upload Only PDF files';\n  }\n    this.setState({errors: errorDetails});\n};\n\n  render() {\n    const { errors } = this.state;\n      return (\n          <div>\n              <Layout>\n                  <Header className=\"card\" style={{ background: '#fff', padding: 0 }} >\n                      <Row>\n                          <Col span={4} style={{ alignContent: 'left', paddingLeft: 20 }}>\n                              <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                          </Col>\n                          <Col span={12} style={{ fontWeight: 'bold', color: '#0066c', textAlign: 'center', paddingLeft: 65 }}>\n                              <h1 style={{ fontWeight: 'bold', color: '#0066c' }}><Link style={{ float: 'right'}} to=\"/h1bform\">Reliable Immigration Form</Link></h1>\n                          </Col>\n                          <Col span={8} style={{ float: 'right' }}>\n                              <Menu style={{ float: 'right'}}>\n                                  <Menu.SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"down-circle\" />Menu</span>}>\n                                      <Menu.Item><Link to=\"/employeelist\">Employee List</Link></Menu.Item>\n                                      <Menu.Divider />\n                                      <Menu.Item><Link to=\"/admin\">Admin Panel</Link></Menu.Item>\n                                      <Menu.Divider />\n                                      <Menu.Item><Link to=\"/logout\">Logout</Link></Menu.Item>\n                                  </Menu.SubMenu>\n                              </Menu>\n                          </Col> \n                      </Row>\n                  </Header>\n                  <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n                    <Form layout=\"inline\">\n                      <Row>\n                        <Card title=\"Letter Template\">\n                          <Form.Item error={!!errors.clientLetterTemplate} style={{ color: 'red' }} label=\"Client Letter Template\">\n                            <Input id=\"clientLetterTemplate\" type=\"file\" name=\"clientLetterTemplate\" onChange={(e) => this.uploadFile(e, \"Client\")} placeholder=\"Client Letter Template\" />\n                            {errors.clientLetterTemplate}\n                            <progress value={this.state.clientLetterTemplateProgress} max=\"100\"/>\n                          </Form.Item>\n                          <Form.Item error={!!errors.vendorLetterTemplate} style={{ color: 'red' }} label=\"Vendor Letter Template\">\n                            <Input id=\"vendorLetterTemplate\" type=\"file\" name=\"vendorLetterTemplate\" onChange={(e) => this.uploadFile(e, \"Client\")} placeholder=\"Vendor Letter Template\" />\n                            {errors.vendorLetterTemplate}\n                            <progress value={this.state.vendorLetterTemplateProgress} max=\"100\"/>\n                          </Form.Item>\n                        </Card>\n                      </Row>\n                    </Form>\n                  </Content>\n                  <Footer style={{ textAlign: 'center' }}>\n                      Reliable Immigration Form @ version: 1.0.0\n                  </Footer>\n              </Layout>\n          </div>\n      );\n  }\n}\n\nAdmin.propTypes = {\n  \n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.loginStatus\n});\n\nexport default connect(mapStateToProps)(Admin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import { getListOfEmployees } from '../../actions';\nimport { Table, Menu, Icon, Layout, Row, Col } from 'antd'\nimport \"antd/dist/antd.css\";\nimport { setEmployeeData, getData } from '../../actions';\n\nconst { Header, Content, Footer } = Layout;\n\nconst columns = [\n  {\n    title: 'First Name',\n    dataIndex: 'firstName',\n    key: 'firstName'\n  },\n  {\n    title: 'Last Name',\n    dataIndex: 'lastName',\n    key: 'lastName'\n  }\n];\n\nclass PreviousForms extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            list: []\n        }\n        this.onClick = this.onClick.bind(this);\n        this.onRowSelect = this.onRowSelect.bind(this);\n    }\n\n    componentDidMount() {\n      this.props.dispatch(getData());\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        // console.log(nextProps);\n        state.list = Object.assign([], Object.values(nextProps.forms));\n        return null;\n    }\n\n    onClick(e, data) {\n        e.preventDefault();\n        console.log(data);\n    }\n\n    onRowSelect(data) {\n      console.log(data);\n        this.props.dispatch(setEmployeeData(data));\n        this.props.history.push('/h1bform');\n    }\n\n    render() {\n        const data = this.state.list;\n        // console.log(data);\n        return (\n            <div>\n                <Layout>\n                    <Header className=\"card\" style={{ background: '#fff', padding: 0 }} >\n                        <Row>\n                            <Col span={4} style={{ alignContent: 'left', paddingLeft: 20 }}>\n                                <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"reliable\" width=\"150px\" height=\"50px\"></img>\n                            </Col>\n                            <Col span={12} style={{ fontWeight: 'bold', color: '#0066c', textAlign: 'center', paddingLeft: 65 }}>\n                                <h1 style={{ fontWeight: 'bold', color: '#0066c' }}><Link style={{ float: 'right'}} to=\"/h1bform\">Reliable Immigration Form</Link></h1>\n                            </Col>\n                             <Col span={8} style={{ float: 'right' }}>\n                                <Menu style={{ float: 'right'}}>\n                                    <Menu.SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"down-circle\" />Menu</span>}>\n                                        <Menu.Item><Link to=\"/employeelist\">Employee List</Link></Menu.Item>\n                                        <Menu.Divider />\n                                        <Menu.Item><Link to=\"/admin\">Admin Panel</Link></Menu.Item>\n                                        <Menu.Divider />\n                                        <Menu.Item><Link to=\"/logout\">Logout</Link></Menu.Item>\n                                    </Menu.SubMenu>\n                                </Menu>\n                             </Col>\n                        </Row>\n                    </Header>\n                    <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n                      <Table\n                          onRow={(data) => ({\n                              onClick: () => { this.onRowSelect(data) }\n                          })}\n                          columns={columns}\n                          dataSource={data}\n                      />\n                      <Link to=\"/h1bform\">New Form</Link>\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        Reliable Immigration Form @ version: 1.0.0\n                    </Footer>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nPreviousForms.protoTypes = {\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        getEmployeesList:state.getEmployeesList,\n        employeeData: state.employeeData,\n        forms: state.forms\n    }\n};\n\nexport default connect(mapStateToProps)(PreviousForms);\n","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Login from \"../components/login\";\nimport H1bForm from '../components/h1bform/form';\nimport Logout from '../components/logout';\nimport ForgotPassword from '../components/forgotpassword';\nimport Signup from '../components/signup';\nimport EmployeeList from '../components/employeelist';\nimport PrivateRoute from '../components/privateroute';\nimport Admin from '../components/admin';\nimport PreviousForms from '../components/previousforms/previousforms';\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Login {...props} />} />\n          <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} />} />\n          <Route exact path=\"/signup\" render={(props) => <Signup {...props} />} />\n          <PrivateRoute path=\"/employeelist\" component={EmployeeList} />\n          <PrivateRoute path=\"/admin\" component={Admin} />\n          <PrivateRoute path=\"/h1bform\" component={H1bForm} />\n          <PrivateRoute path=\"/previousforms\" component={PreviousForms} />\n          <PrivateRoute path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import * as firebase from 'firebase';\n\n// Initialize Firebase\n\n// Shaik FireBase\n// const config = {\n//     apiKey: \"AIzaSyCkob_ADW5U86OBRoFu_7WmyYn8lmMuuY8\",\n//     authDomain: \"immigration-portal.firebaseapp.com\",\n//     databaseURL: \"https://immigration-portal.firebaseio.com\",\n//     projectId: \"immigration-portal\",\n//     storageBucket: \"immigration-portal.appspot.com\",\n//     messagingSenderId: \"893894800074\"\n// };\n\n// Sandeep Firebase\nvar config = {\n    apiKey: \"AIzaSyCrazwk02jnnmAVuG3hRrYxffHkZo8A8r8\",\n    authDomain: \"reliable-immigration-form.firebaseapp.com\",\n    databaseURL: \"https://reliable-immigration-form.firebaseio.com\",\n    projectId: \"reliable-immigration-form\",\n    storageBucket: \"reliable-immigration-form.appspot.com\",\n    messagingSenderId: \"935012316564\"\n};\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\n\nconst db = firebase.database();\n\nconst storage = firebase.storage();\n\nexport { \n    auth, \n    db, \n    storage \n};","import { takeLatest, put, call, take, fork, all } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { eventChannel } from 'redux-saga';\nimport { auth, storage, db } from '../firebase';\nimport { doSignOut } from '../firebase/auth';\nimport {getListOfEmployeesSuccessResponse} from '../actions';\n\nconst database = db;\n\nconst loginUserServiceCall = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n};\n\nconst getDataServiceCall = () => {\n  const formsData = database.ref('NewImmigrationForm');\n  formsData.on('value', (snapshot) => {\n    let forms = snapshot.val();\n    console.log(forms);\n    return forms;\n  });\n  // return formsData;\n}\n\nconst LogoutUserServiceCall = () => {\n    return doSignOut();\n}\n\nconst fileUploadServiceCall = (firstName, lastName, file) => {\n    // Uploading Files to Employee Folder\n    storage.ref(firstName + ' ' + lastName + '/' + 'Employee' + '/' + file.name)\n        .put(file)\n            .then(function(snapshot) {\n                console.log(snapshot);\n            })\n            .catch(function(err) {\n                console.log(err);\n            });\n\n}\n\nconst signUpServiceCall = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n};\n\nconst forgotPasswordServiceCall = (email) => {\n    return auth.sendPasswordResetEmail(email);\n};\n\nfunction* loginAsync(action) {\n    try{\n        console.log('login async saga');\n        const response = yield call(loginUserServiceCall, action.payload.email, action.payload.password);\n        console.log(response);\n        if(response.user){\n            yield put({\n                type: 'LOGIN_ASYNC',\n                payload: action.payload\n            });\n        }\n    } catch(e) {\n        // console.log(e);\n        console.log('login error async saga');\n        yield put({\n            type: 'LOGIN_ERROR_ASYNC',\n            payload: e\n        });\n    }\n}\n\nfunction getNewImmiFormData(){\n  const listener = eventChannel(\n      emit => {\n          database.ref('NewImmigrationForm')\n          .on('value', data => emit(data.val()));\n              return () => database.ref('NewImmigrationForm').off(listener);\n      }\n  );\n  return listener;\n}\n\nfunction* getData() {\n    try{\n        console.log('get data async saga');\n        // const response = yield call(getDataServiceCall);\n        // console.log(response);\n        //  const formsData = database.ref('NewImmigrationForm');\n        //  let newData = {};\n        //    formsData.on('value', (snapshot) => {\n        //      let forms = snapshot.val();\n        //      newData = Object.assign(newData, forms);\n        // console.log(forms);\n        // newData = Object.assign([], Object.values(forms));\n        // console.log(newData);\n        //  });\n\n        // const item = yield call(getNewImmiFormData)\n\n      const getDataChannel = getNewImmiFormData();\n      while(true) {\n          const item = yield take(getDataChannel);\n\n          // console.log(item);\n\n            yield put({\n                type: 'GET_FORMS_LIST_SUCCESS',\n                payload: item\n            });\n      }\n\n    } catch(e) {\n        // console.log(e);\n        console.log('get data error async saga');\n        console.log(e);\n    }\n}\n\nfunction* visaFormAsync(action) {\n    console.log('visa form async saga');\n    yield put({\n        type: 'VISA_FORM_ASYNC',\n        payload: action.payload\n    });\n}\n\nfunction* logoutAsync() {\n    console.log('logout async saga');\n    const response = yield call(LogoutUserServiceCall);\n    yield put({\n        type: 'LOGOUT_ASYNC',\n        payload: response\n    });\n}\n\nfunction* fileUploadAsync(action) {\n    console.log('File upload async saga');\n    const response = yield call(fileUploadServiceCall, action.payload.firstName, action.payload.lastName, action.payload.file);\n    console.log(response);\n}\n\nfunction* adminUploadsAsync(action) {\n    yield put({\n        type: 'ADMIN_UPLOADS_ASYNC',\n        payload: action.payload\n    });\n}\n\nfunction* setEmployeeData(action) {\n    yield put({\n        type: 'SET_EMPLOYEE_DATA_ASYNC',\n        payload: action.payload\n    });\n}\n\nfunction insertNewImmiForm(item) {\n    const newItemRef = database.ref('NewImmigrationForm').push();\n    return newItemRef.set(item);\n}\n\nfunction* createNewImmiFormItemSaga() {\n    const action = yield take(Types.SUBMIT_IMMI_FORM);\n    try {\n        const response = yield call(insertNewImmiForm, action.payload);\n        yield put({\n            type: Types.SUBMIT_IMMI_FORM_SUCCESS,\n            payload: response\n        });\n        alert(\"Sucessfully Submitted the Form.\")\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction insertNewEmployee(item) {\n    const newItemRef = database.ref('NewImmigrationForm').push();\n    return newItemRef.set(item);\n}\n\nfunction* createEmpItemSaga() {\n    console.log('createEmpItemSaga');\n    const action = yield take(Types.VISA_FORM);\n    try {\n        const response = yield call(insertNewEmployee, action.payload);\n        yield put({\n            type: 'VISA_FORM_ASYNC',\n            payload: response\n        });\n       // yield put(createTaskServerSuccess(response));\n        //yield put({ type: Types.CREATE_TASK_SERVER_RESPONSE_SUCCESS, response });\n    } catch (error) {\n        console.log(error);\n      //yield put(createTaskServerFailure(error));\n        // do something with the error, such as dispatching an error action with yield put\n    }\n}\n\nfunction createEventChannelToGetData(){\n\n    // database.ref('employeesList/').on('value', function(snapshot){\n    //     snapshot.forEach(function(childSnapshot){\n    //         console.log(childSnapshot.val());\n    //     })\n    // });\n\n    const listener = new eventChannel(\n        emit => {\n            database.ref('NewImmigrationForm')\n            .on('value', (data) =>{\n                console.log(data.val());\n                emit(data.val())\n            });\n            return () => { return database.ref('NewImmigrationForm').off(listener) };\n        }\n    );\n    return listener;\n}\n\n// Get Incentive Transaction List\nfunction* getEmployeesList(){\n    const getDataChannel = yield call(createEventChannelToGetData());\n    while(true) {\n        const response = yield take(getDataChannel);\n        console.log(response);\n        if(response){\n            yield put({type: Types.GET_EMPLOYEE_LIST_SUCCESS, response});\n        }\n    }\n}\n\nfunction* signUpAsync(action) {\n    try{\n        console.log('Sign up async saga');\n        const response = yield call(signUpServiceCall, action.payload.email, action.payload.password);\n        console.log(response);\n        if(response.code) {\n            yield put({type: 'SIGN_UP_ERROR', payload: response});\n        } else {\n            yield put({type: 'SIGN_UP_ASYNC', payload: action.payload});\n        }\n    }\n    catch(e) {\n        console.log(e);\n        yield put({type: 'SIGN_UP_ERROR', payload: e});\n    }\n}\n\nfunction* forgotPasswordAsync(action) {\n    console.log('Forgot password async saga');\n    const response = yield call(forgotPasswordServiceCall, action.payload);\n    console.log(response);\n    // yield put({type: 'FORGOT_PASSWORD_ASYNC', payload: action.payload});\n}\n\nfunction* startListener() {\n    // #1: Creates an eventChannel and starts the listener;\n    const channel = new eventChannel(emiter => {\n        const listener = database.ref(\"NewImmigrationForm\").on(\"value\", snapshot => {\n            emiter({ response: snapshot.val() || {} });\n        });\n\n        // #2: Return the shutdown method;\n        return () => {\n            listener.off();\n        };\n    });\n\n    // #3: Creates a loops to keep the execution in memory;\n    while (true) {\n      const { response } = yield take(channel);\n      console.log(response);\n\n      yield put(getListOfEmployeesSuccessResponse(response))\n      // #4: Pause the task until the channel emits a signal and dispatch an action in the store;\n      //yield put({type: Types.GET_EMPLOYEE_LIST_SUCCESS, data});// this is causing the error.\n    }\n}\n\nexport function* rootSaga() {\n    yield takeLatest(Types.LOGIN, loginAsync);\n    // yield takeLatest(Types.VISA_FORM, visaFormAsync);\n    yield takeLatest(Types.LOGOUT, logoutAsync);\n    yield takeLatest(Types.FILE_UPLOAD, fileUploadAsync);\n    yield takeLatest(Types.SIGN_UP, signUpAsync);\n    yield takeLatest(Types.FORGOT_PASSWORD, forgotPasswordAsync);\n    //yield all([takeLatest(Types.SUBMIT_IMMI_FORM, createNewImmiFormItemSaga)]);\n   // yield fork(createEmpItemSaga);\n    yield fork(createNewImmiFormItemSaga);\n    //yield fork(startListener);\n    yield all([takeLatest(Types.GET_EMPLOYEE_LIST, startListener)]);\n    yield takeLatest(Types.ADMIN_UPLOADS, adminUploadsAsync);\n    yield takeLatest(Types.SET_EMPLOYEE_DATA, setEmployeeData);\n    yield takeLatest(Types.GET_DATA, getData);\n}\n","import { auth } from '../firebase';\n\n// Sign Up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n    auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n    auth.signInWithEmailAndPassword(email, password);\n\n// Sign out\nexport const doSignOut = () =>\n    auth.signOut();\n  \n// Password Reset\nexport const doPasswordReset = (email) =>\n    auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n    auth.currentUser.updatePassword(password);\n","import * as Types from '../actions/types';\n\nconst initialState = {\n    loggedInUser: {},\n    visaFormData: {},\n    loginStatus : false,\n    signUpStatus: false,\n    image: [],\n    getEmployeesList:[],\n    forms: [],\n    error: '',\n    sucessFormSubmission:false,\n    employeeData: {},\n    adminUploads: {\n        clientLetterTemplate: '',\n        clientLetterTemplatePathLower: '',\n        vendorLetterTemplate: '',\n        vendorLetterTemplatePathLower: ''\n    },\n    adminsList: [\n        'shaik.mehboob@rsrit.com',\n        'abhinay.g@rsrit.com',\n        'sandeep.perkari@rsrit.com',\n        'sridhar.katukuri@rsrit.com',\n        'venkat.gone@rsrit.com',\n        'poornima.d@rsrit.com',\n        'visha.felix@rsrit.com',\n    ],\n    isAdmin: false\n};\n\nconst handleSetFormList = (state, action) => {\n  let newState = {}\n  // console.log(action);\n  newState = Object.assign([],  state, {forms: Object.assign([], Object.values(action))})\n  // console.log(newState);\n  return {...newState.forms};\n// return Object.assign([], Object.values(action))\n}\n\nexport default function(state = initialState, action) {\n    // console.log(action);\n    switch(action.type) {\n\n        case 'GET_EMPLOYEE_LIST' :\n            return {...state};\n\n        case Types.SUBMIT_IMMI_FORM :\n            return {\n                ...state,\n                sucessFormSubmission:false\n            };\n\n        case Types.SUBMIT_IMMI_FORM_SUCCESS :\n            return {\n                ...state,\n                sucessFormSubmission:true\n            };\n\n        // Below gets the list of Employees\n        case 'GET_EMPLOYEE_LIST_SUCCESS':\n            return {\n                ...state,\n                getEmployeesList:Object.assign([], Object.values(action.data))\n            };\n\n        // case 'VISA_FORM':\n        //     return {...state};\n\n        case 'SIGN_UP_ASYNC':\n            return {\n                ...state,\n                signUpStatus: true,\n                error: ''\n            };\n\n        case 'SIGN_UP_ERROR':\n            return {\n                ...state,\n                error: action.payload.message\n            }\n\n        case 'FORGOT_PASSWORD_ASYNC':\n            return {\n                ...state\n            };\n\n        case 'LOGIN_ASYNC' :\n            if(state.adminsList.includes(action.payload.email)) {\n                state.isAdmin = true;\n            } else {\n                state.isAdmin = false;\n            }\n            return {\n                ...state,\n                loggedInUser: action.payload,\n                loginStatus: true,\n                signUpStatus: false\n            }\n\n        case 'LOGIN_ERROR_ASYNC' :\n            return {\n                ...state,\n                error: action.payload.message,\n                loginStatus: false\n            }\n\n        case 'VISA_FORM_ASYNC' :\n            return {\n                ...state,\n                visaFormData: action.payload\n            }\n\n        case 'LOGOUT_ASYNC' :\n            return {\n                ...state,\n                loginStatus: false\n            }\n\n        case 'ADMIN_UPLOADS_ASYNC' :\n            return {\n                ...state,\n                adminUploads: Object.assign(state.adminUploads, action.payload)\n            }\n\n        case 'SET_EMPLOYEE_DATA_ASYNC' :\n            return {\n                ...state,\n                employeeData: action.payload\n            }\n\n      /*  case 'SET_FORMS_LIST' :\n            return {\n                ...state,\n                forms: handleSetFormList(state, action.payload)//action.payload\n            }*/\n\n                    case 'GET_FORMS_LIST_SUCCESS' :\n                        return {\n                            ...state,\n                            forms: handleSetFormList(state, action.payload)//action.payload\n                        }\n\n        default:\n            return state;\n    }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from '../sagas';\nimport reducers from '../reducers';\n/*\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;*/\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet middleware = [sagaMiddleware];\n\nif(process.env.NODE_ENV === \"development\"){\n    middleware.push(logger);\n}\n\nconst store = createStore(reducers, applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport Routes from './routes';\nimport store from './stores';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <div className=\"App\">\n          <Routes />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}